/*
 * generated by Xtext 2.26.0
 */
grammar InternalDeviceDefinition;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package dk.sdu.gms.dds.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package dk.sdu.gms.dds.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import dk.sdu.gms.dds.services.DeviceDefinitionGrammarAccess;

}

@parser::members {

 	private DeviceDefinitionGrammarAccess grammarAccess;

    public InternalDeviceDefinitionParser(TokenStream input, DeviceDefinitionGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "System";
   	}

   	@Override
   	protected DeviceDefinitionGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleSystem
entryRuleSystem returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSystemRule()); }
	iv_ruleSystem=ruleSystem
	{ $current=$iv_ruleSystem.current; }
	EOF;

// Rule System
ruleSystem returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getSystemAccess().getImportsImportParserRuleCall_0_0());
				}
				lv_imports_0_0=ruleImport
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSystemRule());
					}
					add(
						$current,
						"imports",
						lv_imports_0_0,
						"dk.sdu.gms.dds.DeviceDefinition.Import");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_1='System'
		{
			newLeafNode(otherlv_1, grammarAccess.getSystemAccess().getSystemKeyword_1());
		}
		otherlv_2=':'
		{
			newLeafNode(otherlv_2, grammarAccess.getSystemAccess().getColonKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSystemAccess().getGatewayGatewayParserRuleCall_3_0());
				}
				lv_gateway_3_0=ruleGateway
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSystemRule());
					}
					set(
						$current,
						"gateway",
						lv_gateway_3_0,
						"dk.sdu.gms.dds.DeviceDefinition.Gateway");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getSystemAccess().getGraphsGraphParserRuleCall_4_0());
				}
				lv_graphs_4_0=ruleGraph
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSystemRule());
					}
					add(
						$current,
						"graphs",
						lv_graphs_4_0,
						"dk.sdu.gms.dds.DeviceDefinition.Graph");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRuleGraph
entryRuleGraph returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getGraphRule()); }
	iv_ruleGraph=ruleGraph
	{ $current=$iv_ruleGraph.current; }
	EOF;

// Rule Graph
ruleGraph returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Graph'
		{
			newLeafNode(otherlv_0, grammarAccess.getGraphAccess().getGraphKeyword_0());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getGraphRule());
					}
				}
				otherlv_1=RULE_ID
				{
					newLeafNode(otherlv_1, grammarAccess.getGraphAccess().getTypeImportCrossReference_1_0());
				}
			)
		)
		(
			(
				lv_name_2_0=RULE_ID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getGraphAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getGraphRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_3=':'
		{
			newLeafNode(otherlv_3, grammarAccess.getGraphAccess().getColonKeyword_3());
		}
		otherlv_4='category'
		{
			newLeafNode(otherlv_4, grammarAccess.getGraphAccess().getCategoryKeyword_4());
		}
		(
			(
				lv_category_5_0=RULE_STRING
				{
					newLeafNode(lv_category_5_0, grammarAccess.getGraphAccess().getCategorySTRINGTerminalRuleCall_5_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getGraphRule());
					}
					setWithLastConsumed(
						$current,
						"category",
						lv_category_5_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_6='title'
		{
			newLeafNode(otherlv_6, grammarAccess.getGraphAccess().getTitleKeyword_6());
		}
		(
			(
				lv_title_7_0=RULE_STRING
				{
					newLeafNode(lv_title_7_0, grammarAccess.getGraphAccess().getTitleSTRINGTerminalRuleCall_7_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getGraphRule());
					}
					setWithLastConsumed(
						$current,
						"title",
						lv_title_7_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_8='x'
		{
			newLeafNode(otherlv_8, grammarAccess.getGraphAccess().getXKeyword_8());
		}
		(
			(
				lv_xlabel_9_0=RULE_STRING
				{
					newLeafNode(lv_xlabel_9_0, grammarAccess.getGraphAccess().getXlabelSTRINGTerminalRuleCall_9_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getGraphRule());
					}
					setWithLastConsumed(
						$current,
						"xlabel",
						lv_xlabel_9_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_10='y'
		{
			newLeafNode(otherlv_10, grammarAccess.getGraphAccess().getYKeyword_10());
		}
		(
			(
				lv_ylabel_11_0=RULE_STRING
				{
					newLeafNode(lv_ylabel_11_0, grammarAccess.getGraphAccess().getYlabelSTRINGTerminalRuleCall_11_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getGraphRule());
					}
					setWithLastConsumed(
						$current,
						"ylabel",
						lv_ylabel_11_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
	)
;

// Entry rule entryRuleGateway
entryRuleGateway returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getGatewayRule()); }
	iv_ruleGateway=ruleGateway
	{ $current=$iv_ruleGateway.current; }
	EOF;

// Rule Gateway
ruleGateway returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Gateway'
		{
			newLeafNode(otherlv_0, grammarAccess.getGatewayAccess().getGatewayKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getGatewayAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getGatewayRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2=':'
		{
			newLeafNode(otherlv_2, grammarAccess.getGatewayAccess().getColonKeyword_2());
		}
		otherlv_3='mac'
		{
			newLeafNode(otherlv_3, grammarAccess.getGatewayAccess().getMacKeyword_3());
		}
		(
			(
				lv_mac_4_0=RULE_MAC
				{
					newLeafNode(lv_mac_4_0, grammarAccess.getGatewayAccess().getMacMACTerminalRuleCall_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getGatewayRule());
					}
					setWithLastConsumed(
						$current,
						"mac",
						lv_mac_4_0,
						"dk.sdu.gms.dds.DeviceDefinition.MAC");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getGatewayAccess().getWorkersWorkerParserRuleCall_5_0());
				}
				lv_workers_5_0=ruleWorker
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getGatewayRule());
					}
					add(
						$current,
						"workers",
						lv_workers_5_0,
						"dk.sdu.gms.dds.DeviceDefinition.Worker");
					afterParserOrEnumRuleCall();
				}
			)
		)+
	)
;

// Entry rule entryRuleWorker
entryRuleWorker returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getWorkerRule()); }
	iv_ruleWorker=ruleWorker
	{ $current=$iv_ruleWorker.current; }
	EOF;

// Rule Worker
ruleWorker returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Worker'
		{
			newLeafNode(otherlv_0, grammarAccess.getWorkerAccess().getWorkerKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getWorkerAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getWorkerRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2=':'
		{
			newLeafNode(otherlv_2, grammarAccess.getWorkerAccess().getColonKeyword_2());
		}
		otherlv_3='mac'
		{
			newLeafNode(otherlv_3, grammarAccess.getWorkerAccess().getMacKeyword_3());
		}
		(
			(
				lv_mac_4_0=RULE_MAC
				{
					newLeafNode(lv_mac_4_0, grammarAccess.getWorkerAccess().getMacMACTerminalRuleCall_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getWorkerRule());
					}
					setWithLastConsumed(
						$current,
						"mac",
						lv_mac_4_0,
						"dk.sdu.gms.dds.DeviceDefinition.MAC");
				}
			)
		)
		(
			otherlv_5='sleep'
			{
				newLeafNode(otherlv_5, grammarAccess.getWorkerAccess().getSleepKeyword_5_0());
			}
			otherlv_6='for'
			{
				newLeafNode(otherlv_6, grammarAccess.getWorkerAccess().getForKeyword_5_1());
			}
			(
				(
					lv_sleepTime_7_0=RULE_INT
					{
						newLeafNode(lv_sleepTime_7_0, grammarAccess.getWorkerAccess().getSleepTimeINTTerminalRuleCall_5_2_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getWorkerRule());
						}
						setWithLastConsumed(
							$current,
							"sleepTime",
							lv_sleepTime_7_0,
							"org.eclipse.xtext.common.Terminals.INT");
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getWorkerAccess().getTimeUnitTimeUnitParserRuleCall_5_3_0());
					}
					lv_timeUnit_8_0=ruleTimeUnit
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getWorkerRule());
						}
						add(
							$current,
							"timeUnit",
							lv_timeUnit_8_0,
							"dk.sdu.gms.dds.DeviceDefinition.TimeUnit");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_9='broadcast'
			{
				newLeafNode(otherlv_9, grammarAccess.getWorkerAccess().getBroadcastKeyword_6_0());
			}
			otherlv_10='for'
			{
				newLeafNode(otherlv_10, grammarAccess.getWorkerAccess().getForKeyword_6_1());
			}
			(
				(
					lv_broadcastTime_11_0=RULE_INT
					{
						newLeafNode(lv_broadcastTime_11_0, grammarAccess.getWorkerAccess().getBroadcastTimeINTTerminalRuleCall_6_2_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getWorkerRule());
						}
						setWithLastConsumed(
							$current,
							"broadcastTime",
							lv_broadcastTime_11_0,
							"org.eclipse.xtext.common.Terminals.INT");
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getWorkerAccess().getTimeUnitTimeUnitParserRuleCall_6_3_0());
					}
					lv_timeUnit_12_0=ruleTimeUnit
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getWorkerRule());
						}
						add(
							$current,
							"timeUnit",
							lv_timeUnit_12_0,
							"dk.sdu.gms.dds.DeviceDefinition.TimeUnit");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getWorkerAccess().getDevicesDeviceParserRuleCall_7_0());
				}
				lv_devices_13_0=ruleDevice
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getWorkerRule());
					}
					add(
						$current,
						"devices",
						lv_devices_13_0,
						"dk.sdu.gms.dds.DeviceDefinition.Device");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRuleDevice
entryRuleDevice returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDeviceRule()); }
	iv_ruleDevice=ruleDevice
	{ $current=$iv_ruleDevice.current; }
	EOF;

// Rule Device
ruleDevice returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getDeviceAccess().getSensorParserRuleCall_0());
		}
		this_Sensor_0=ruleSensor
		{
			$current = $this_Sensor_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getDeviceAccess().getActuatorParserRuleCall_1());
		}
		this_Actuator_1=ruleActuator
		{
			$current = $this_Actuator_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleSensor
entryRuleSensor returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSensorRule()); }
	iv_ruleSensor=ruleSensor
	{ $current=$iv_ruleSensor.current; }
	EOF;

// Rule Sensor
ruleSensor returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Sensor'
		{
			newLeafNode(otherlv_0, grammarAccess.getSensorAccess().getSensorKeyword_0());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSensorRule());
					}
				}
				otherlv_1=RULE_ID
				{
					newLeafNode(otherlv_1, grammarAccess.getSensorAccess().getTypeImportCrossReference_1_0());
				}
			)
		)
		(
			(
				lv_name_2_0=RULE_ID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getSensorAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSensorRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)?
		otherlv_3=':'
		{
			newLeafNode(otherlv_3, grammarAccess.getSensorAccess().getColonKeyword_3());
		}
		otherlv_4='pins'
		{
			newLeafNode(otherlv_4, grammarAccess.getSensorAccess().getPinsKeyword_4());
		}
		(
			(
				lv_pins_5_0=RULE_INT
				{
					newLeafNode(lv_pins_5_0, grammarAccess.getSensorAccess().getPinsINTTerminalRuleCall_5_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSensorRule());
					}
					addWithLastConsumed(
						$current,
						"pins",
						lv_pins_5_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)*
		(
			otherlv_6=','
			{
				newLeafNode(otherlv_6, grammarAccess.getSensorAccess().getCommaKeyword_6_0());
			}
			(
				(
					lv_pins_7_0=RULE_INT
					{
						newLeafNode(lv_pins_7_0, grammarAccess.getSensorAccess().getPinsINTTerminalRuleCall_6_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getSensorRule());
						}
						addWithLastConsumed(
							$current,
							"pins",
							lv_pins_7_0,
							"org.eclipse.xtext.common.Terminals.INT");
					}
				)
			)
		)*
		otherlv_8='rate'
		{
			newLeafNode(otherlv_8, grammarAccess.getSensorAccess().getRateKeyword_7());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSensorAccess().getSampleRatePrimitiveParserRuleCall_8_0());
				}
				lv_sampleRate_9_0=rulePrimitive
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSensorRule());
					}
					set(
						$current,
						"sampleRate",
						lv_sampleRate_9_0,
						"dk.sdu.gms.dds.DeviceDefinition.Primitive");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getSensorAccess().getOutputsSensorOutputParserRuleCall_9_0());
				}
				lv_outputs_10_0=ruleSensorOutput
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSensorRule());
					}
					add(
						$current,
						"outputs",
						lv_outputs_10_0,
						"dk.sdu.gms.dds.DeviceDefinition.SensorOutput");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			otherlv_11='behavior'
			{
				newLeafNode(otherlv_11, grammarAccess.getSensorAccess().getBehaviorKeyword_10_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getSensorAccess().getBehaviorSampleBehaviorParserRuleCall_10_1_0());
					}
					lv_behavior_12_0=ruleSampleBehavior
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSensorRule());
						}
						add(
							$current,
							"behavior",
							lv_behavior_12_0,
							"dk.sdu.gms.dds.DeviceDefinition.SampleBehavior");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_13='sample'
			{
				newLeafNode(otherlv_13, grammarAccess.getSensorAccess().getSampleKeyword_11_0());
			}
			otherlv_14='if'
			{
				newLeafNode(otherlv_14, grammarAccess.getSensorAccess().getIfKeyword_11_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getSensorAccess().getPredicateExpParserRuleCall_11_2_0());
					}
					lv_predicate_15_0=ruleExp
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSensorRule());
						}
						add(
							$current,
							"predicate",
							lv_predicate_15_0,
							"dk.sdu.gms.dds.DeviceDefinition.Exp");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_16='graph'
			{
				newLeafNode(otherlv_16, grammarAccess.getSensorAccess().getGraphKeyword_12_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getSensorRule());
						}
					}
					otherlv_17=RULE_ID
					{
						newLeafNode(otherlv_17, grammarAccess.getSensorAccess().getGraphGraphCrossReference_12_1_0());
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleSampleBehavior
entryRuleSampleBehavior returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSampleBehaviorRule()); }
	iv_ruleSampleBehavior=ruleSampleBehavior
	{ $current=$iv_ruleSampleBehavior.current; }
	EOF;

// Rule SampleBehavior
ruleSampleBehavior returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSampleBehaviorRule());
					}
				}
				otherlv_0=RULE_ID
				{
					newLeafNode(otherlv_0, grammarAccess.getSampleBehaviorAccess().getTypeImportCrossReference_0_0());
				}
			)
		)
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getSampleBehaviorAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSampleBehaviorAccess().getArgsPrimaryParserRuleCall_2_0());
				}
				lv_args_2_0=rulePrimary
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSampleBehaviorRule());
					}
					add(
						$current,
						"args",
						lv_args_2_0,
						"dk.sdu.gms.dds.DeviceDefinition.Primary");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			otherlv_3=','
			{
				newLeafNode(otherlv_3, grammarAccess.getSampleBehaviorAccess().getCommaKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getSampleBehaviorAccess().getPinsPrimaryParserRuleCall_3_1_0());
					}
					lv_pins_4_0=rulePrimary
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSampleBehaviorRule());
						}
						add(
							$current,
							"pins",
							lv_pins_4_0,
							"dk.sdu.gms.dds.DeviceDefinition.Primary");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_5=')'
		{
			newLeafNode(otherlv_5, grammarAccess.getSampleBehaviorAccess().getRightParenthesisKeyword_4());
		}
	)
;

// Entry rule entryRuleTimeUnit
entryRuleTimeUnit returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTimeUnitRule()); }
	iv_ruleTimeUnit=ruleTimeUnit
	{ $current=$iv_ruleTimeUnit.current; }
	EOF;

// Rule TimeUnit
ruleTimeUnit returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getTimeUnitAccess().getSecondAction_0_0(),
						$current);
				}
			)
			(
				otherlv_1='second'
				{
					newLeafNode(otherlv_1, grammarAccess.getTimeUnitAccess().getSecondKeyword_0_1_0());
				}
				    |
				otherlv_2='seconds'
				{
					newLeafNode(otherlv_2, grammarAccess.getTimeUnitAccess().getSecondsKeyword_0_1_1());
				}
			)
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getTimeUnitAccess().getMinuteAction_1_0(),
						$current);
				}
			)
			(
				otherlv_4='minute'
				{
					newLeafNode(otherlv_4, grammarAccess.getTimeUnitAccess().getMinuteKeyword_1_1_0());
				}
				    |
				otherlv_5='minutes'
				{
					newLeafNode(otherlv_5, grammarAccess.getTimeUnitAccess().getMinutesKeyword_1_1_1());
				}
			)
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getTimeUnitAccess().getHourAction_2_0(),
						$current);
				}
			)
			(
				otherlv_7='hour'
				{
					newLeafNode(otherlv_7, grammarAccess.getTimeUnitAccess().getHourKeyword_2_1_0());
				}
				    |
				otherlv_8='hours'
				{
					newLeafNode(otherlv_8, grammarAccess.getTimeUnitAccess().getHoursKeyword_2_1_1());
				}
			)
		)
	)
;

// Entry rule entryRuleBinding
entryRuleBinding returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBindingRule()); }
	iv_ruleBinding=ruleBinding
	{ $current=$iv_ruleBinding.current; }
	EOF;

// Rule Binding
ruleBinding returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_name_0_0=RULE_ID
			{
				newLeafNode(lv_name_0_0, grammarAccess.getBindingAccess().getNameIDTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getBindingRule());
				}
				setWithLastConsumed(
					$current,
					"name",
					lv_name_0_0,
					"org.eclipse.xtext.common.Terminals.ID");
			}
		)
	)
;

// Entry rule entryRuleImport
entryRuleImport returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getImportRule()); }
	iv_ruleImport=ruleImport
	{ $current=$iv_ruleImport.current; }
	EOF;

// Rule Import
ruleImport returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='import'
		{
			newLeafNode(otherlv_0, grammarAccess.getImportAccess().getImportKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getImportAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getImportRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleSensorOutput
entryRuleSensorOutput returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSensorOutputRule()); }
	iv_ruleSensorOutput=ruleSensorOutput
	{ $current=$iv_ruleSensorOutput.current; }
	EOF;

// Rule SensorOutput
ruleSensorOutput returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='out'
		{
			newLeafNode(otherlv_0, grammarAccess.getSensorOutputAccess().getOutKeyword_0());
		}
		(
			(
				lv_output_1_0=RULE_STRING
				{
					newLeafNode(lv_output_1_0, grammarAccess.getSensorOutputAccess().getOutputSTRINGTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSensorOutputRule());
					}
					setWithLastConsumed(
						$current,
						"output",
						lv_output_1_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)?
		otherlv_2='as'
		{
			newLeafNode(otherlv_2, grammarAccess.getSensorOutputAccess().getAsKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSensorOutputAccess().getBindingBindingParserRuleCall_3_0());
				}
				lv_binding_3_0=ruleBinding
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSensorOutputRule());
					}
					set(
						$current,
						"binding",
						lv_binding_3_0,
						"dk.sdu.gms.dds.DeviceDefinition.Binding");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_4='with'
			{
				newLeafNode(otherlv_4, grammarAccess.getSensorOutputAccess().getWithKeyword_4_0());
			}
			otherlv_5='mapping'
			{
				newLeafNode(otherlv_5, grammarAccess.getSensorOutputAccess().getMappingKeyword_4_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getSensorOutputAccess().getMappingExpParserRuleCall_4_2_0());
					}
					lv_mapping_6_0=ruleExp
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSensorOutputRule());
						}
						set(
							$current,
							"mapping",
							lv_mapping_6_0,
							"dk.sdu.gms.dds.DeviceDefinition.Exp");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleActuator
entryRuleActuator returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getActuatorRule()); }
	iv_ruleActuator=ruleActuator
	{ $current=$iv_ruleActuator.current; }
	EOF;

// Rule Actuator
ruleActuator returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Actuator'
		{
			newLeafNode(otherlv_0, grammarAccess.getActuatorAccess().getActuatorKeyword_0());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getActuatorRule());
					}
				}
				otherlv_1=RULE_ID
				{
					newLeafNode(otherlv_1, grammarAccess.getActuatorAccess().getTypeImportCrossReference_1_0());
				}
			)
		)
		(
			(
				lv_name_2_0=RULE_ID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getActuatorAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getActuatorRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)?
		otherlv_3=':'
		{
			newLeafNode(otherlv_3, grammarAccess.getActuatorAccess().getColonKeyword_3());
		}
		otherlv_4='pins'
		{
			newLeafNode(otherlv_4, grammarAccess.getActuatorAccess().getPinsKeyword_4());
		}
		(
			(
				lv_pins_5_0=RULE_INT
				{
					newLeafNode(lv_pins_5_0, grammarAccess.getActuatorAccess().getPinsINTTerminalRuleCall_5_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getActuatorRule());
					}
					addWithLastConsumed(
						$current,
						"pins",
						lv_pins_5_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)*
		(
			otherlv_6=','
			{
				newLeafNode(otherlv_6, grammarAccess.getActuatorAccess().getCommaKeyword_6_0());
			}
			(
				(
					lv_pins_7_0=RULE_INT
					{
						newLeafNode(lv_pins_7_0, grammarAccess.getActuatorAccess().getPinsINTTerminalRuleCall_6_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getActuatorRule());
						}
						addWithLastConsumed(
							$current,
							"pins",
							lv_pins_7_0,
							"org.eclipse.xtext.common.Terminals.INT");
					}
				)
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getActuatorAccess().getSettingsSettingParserRuleCall_7_0());
				}
				lv_settings_8_0=ruleSetting
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getActuatorRule());
					}
					add(
						$current,
						"settings",
						lv_settings_8_0,
						"dk.sdu.gms.dds.DeviceDefinition.Setting");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_9='trigger'
		{
			newLeafNode(otherlv_9, grammarAccess.getActuatorAccess().getTriggerKeyword_8());
		}
		otherlv_10='on'
		{
			newLeafNode(otherlv_10, grammarAccess.getActuatorAccess().getOnKeyword_9());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getActuatorAccess().getExpExpParserRuleCall_10_0());
				}
				lv_exp_11_0=ruleExp
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getActuatorRule());
					}
					set(
						$current,
						"exp",
						lv_exp_11_0,
						"dk.sdu.gms.dds.DeviceDefinition.Exp");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleSetting
entryRuleSetting returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSettingRule()); }
	iv_ruleSetting=ruleSetting
	{ $current=$iv_ruleSetting.current; }
	EOF;

// Rule Setting
ruleSetting returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='setting'
		{
			newLeafNode(otherlv_0, grammarAccess.getSettingAccess().getSettingKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSettingAccess().getBindingBindingParserRuleCall_1_0());
				}
				lv_binding_1_0=ruleBinding
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSettingRule());
					}
					set(
						$current,
						"binding",
						lv_binding_1_0,
						"dk.sdu.gms.dds.DeviceDefinition.Binding");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='='
		{
			newLeafNode(otherlv_2, grammarAccess.getSettingAccess().getEqualsSignKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSettingAccess().getValuePrimitiveParserRuleCall_3_0());
				}
				lv_value_3_0=rulePrimitive
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSettingRule());
					}
					set(
						$current,
						"value",
						lv_value_3_0,
						"dk.sdu.gms.dds.DeviceDefinition.Primitive");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRulePrimitive
entryRulePrimitive returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPrimitiveRule()); }
	iv_rulePrimitive=rulePrimitive
	{ $current=$iv_rulePrimitive.current; }
	EOF;

// Rule Primitive
rulePrimitive returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getPrimitiveAccess().getDecimalPrimitiveAction_0_0(),
						$current);
				}
			)
			(
				(
					lv_value_1_0=RULE_DECIMAL
					{
						newLeafNode(lv_value_1_0, grammarAccess.getPrimitiveAccess().getValueDECIMALTerminalRuleCall_0_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getPrimitiveRule());
						}
						setWithLastConsumed(
							$current,
							"value",
							lv_value_1_0,
							"dk.sdu.gms.dds.DeviceDefinition.DECIMAL");
					}
				)
			)
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getPrimitiveAccess().getIntPrimitiveAction_1_0(),
						$current);
				}
			)
			(
				(
					lv_value_3_0=RULE_INT
					{
						newLeafNode(lv_value_3_0, grammarAccess.getPrimitiveAccess().getValueINTTerminalRuleCall_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getPrimitiveRule());
						}
						setWithLastConsumed(
							$current,
							"value",
							lv_value_3_0,
							"org.eclipse.xtext.common.Terminals.INT");
					}
				)
			)
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getPrimitiveAccess().getBooleanTrueAction_2_0(),
						$current);
				}
			)
			otherlv_5='TRUE'
			{
				newLeafNode(otherlv_5, grammarAccess.getPrimitiveAccess().getTRUEKeyword_2_1());
			}
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getPrimitiveAccess().getBooleanFalseAction_3_0(),
						$current);
				}
			)
			otherlv_7='FALSE'
			{
				newLeafNode(otherlv_7, grammarAccess.getPrimitiveAccess().getFALSEKeyword_3_1());
			}
		)
	)
;

// Entry rule entryRuleExp
entryRuleExp returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExpRule()); }
	iv_ruleExp=ruleExp
	{ $current=$iv_ruleExp.current; }
	EOF;

// Rule Exp
ruleExp returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getExpAccess().getFactorParserRuleCall_0());
		}
		this_Factor_0=ruleFactor
		{
			$current = $this_Factor_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				(
					(
						{
							$current = forceCreateModelElementAndSet(
								grammarAccess.getExpAccess().getPlusLeftAction_1_0_0_0(),
								$current);
						}
					)
					otherlv_2='+'
					{
						newLeafNode(otherlv_2, grammarAccess.getExpAccess().getPlusSignKeyword_1_0_0_1());
					}
				)
				    |
				(
					(
						{
							$current = forceCreateModelElementAndSet(
								grammarAccess.getExpAccess().getMinusLeftAction_1_0_1_0(),
								$current);
						}
					)
					otherlv_4='-'
					{
						newLeafNode(otherlv_4, grammarAccess.getExpAccess().getHyphenMinusKeyword_1_0_1_1());
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getExpAccess().getRightFactorParserRuleCall_1_1_0());
					}
					lv_right_5_0=ruleFactor
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getExpRule());
						}
						set(
							$current,
							"right",
							lv_right_5_0,
							"dk.sdu.gms.dds.DeviceDefinition.Factor");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleFactor
entryRuleFactor returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFactorRule()); }
	iv_ruleFactor=ruleFactor
	{ $current=$iv_ruleFactor.current; }
	EOF;

// Rule Factor
ruleFactor returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getFactorAccess().getCompareParserRuleCall_0());
		}
		this_Compare_0=ruleCompare
		{
			$current = $this_Compare_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				(
					(
						{
							$current = forceCreateModelElementAndSet(
								grammarAccess.getFactorAccess().getMultLeftAction_1_0_0_0(),
								$current);
						}
					)
					otherlv_2='*'
					{
						newLeafNode(otherlv_2, grammarAccess.getFactorAccess().getAsteriskKeyword_1_0_0_1());
					}
				)
				    |
				(
					(
						{
							$current = forceCreateModelElementAndSet(
								grammarAccess.getFactorAccess().getDivLeftAction_1_0_1_0(),
								$current);
						}
					)
					otherlv_4='/'
					{
						newLeafNode(otherlv_4, grammarAccess.getFactorAccess().getSolidusKeyword_1_0_1_1());
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getFactorAccess().getRightCompareParserRuleCall_1_1_0());
					}
					lv_right_5_0=ruleCompare
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getFactorRule());
						}
						set(
							$current,
							"right",
							lv_right_5_0,
							"dk.sdu.gms.dds.DeviceDefinition.Compare");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleCompare
entryRuleCompare returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCompareRule()); }
	iv_ruleCompare=ruleCompare
	{ $current=$iv_ruleCompare.current; }
	EOF;

// Rule Compare
ruleCompare returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getCompareAccess().getCompareOrEqualsParserRuleCall_0());
		}
		this_CompareOrEquals_0=ruleCompareOrEquals
		{
			$current = $this_CompareOrEquals_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				(
					(
						{
							$current = forceCreateModelElementAndSet(
								grammarAccess.getCompareAccess().getGreaterLeftAction_1_0_0_0(),
								$current);
						}
					)
					otherlv_2='>'
					{
						newLeafNode(otherlv_2, grammarAccess.getCompareAccess().getGreaterThanSignKeyword_1_0_0_1());
					}
				)
				    |
				(
					(
						{
							$current = forceCreateModelElementAndSet(
								grammarAccess.getCompareAccess().getLesserLeftAction_1_0_1_0(),
								$current);
						}
					)
					otherlv_4='<'
					{
						newLeafNode(otherlv_4, grammarAccess.getCompareAccess().getLessThanSignKeyword_1_0_1_1());
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getCompareAccess().getRightCompareOrEqualsParserRuleCall_1_1_0());
					}
					lv_right_5_0=ruleCompareOrEquals
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCompareRule());
						}
						set(
							$current,
							"right",
							lv_right_5_0,
							"dk.sdu.gms.dds.DeviceDefinition.CompareOrEquals");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleCompareOrEquals
entryRuleCompareOrEquals returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCompareOrEqualsRule()); }
	iv_ruleCompareOrEquals=ruleCompareOrEquals
	{ $current=$iv_ruleCompareOrEquals.current; }
	EOF;

// Rule CompareOrEquals
ruleCompareOrEquals returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getCompareOrEqualsAccess().getEqualsOrNotEqualsParserRuleCall_0());
		}
		this_EqualsOrNotEquals_0=ruleEqualsOrNotEquals
		{
			$current = $this_EqualsOrNotEquals_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				(
					(
						{
							$current = forceCreateModelElementAndSet(
								grammarAccess.getCompareOrEqualsAccess().getGreaterOrEqualsLeftAction_1_0_0_0(),
								$current);
						}
					)
					otherlv_2='>='
					{
						newLeafNode(otherlv_2, grammarAccess.getCompareOrEqualsAccess().getGreaterThanSignEqualsSignKeyword_1_0_0_1());
					}
				)
				    |
				(
					(
						{
							$current = forceCreateModelElementAndSet(
								grammarAccess.getCompareOrEqualsAccess().getLesserOrEqualsLeftAction_1_0_1_0(),
								$current);
						}
					)
					otherlv_4='<='
					{
						newLeafNode(otherlv_4, grammarAccess.getCompareOrEqualsAccess().getLessThanSignEqualsSignKeyword_1_0_1_1());
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getCompareOrEqualsAccess().getRightEqualsOrNotEqualsParserRuleCall_1_1_0());
					}
					lv_right_5_0=ruleEqualsOrNotEquals
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCompareOrEqualsRule());
						}
						set(
							$current,
							"right",
							lv_right_5_0,
							"dk.sdu.gms.dds.DeviceDefinition.EqualsOrNotEquals");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleEqualsOrNotEquals
entryRuleEqualsOrNotEquals returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEqualsOrNotEqualsRule()); }
	iv_ruleEqualsOrNotEquals=ruleEqualsOrNotEquals
	{ $current=$iv_ruleEqualsOrNotEquals.current; }
	EOF;

// Rule EqualsOrNotEquals
ruleEqualsOrNotEquals returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getEqualsOrNotEqualsAccess().getAndOrParserRuleCall_0());
		}
		this_AndOr_0=ruleAndOr
		{
			$current = $this_AndOr_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				(
					(
						{
							$current = forceCreateModelElementAndSet(
								grammarAccess.getEqualsOrNotEqualsAccess().getEqualsLeftAction_1_0_0_0(),
								$current);
						}
					)
					otherlv_2='=='
					{
						newLeafNode(otherlv_2, grammarAccess.getEqualsOrNotEqualsAccess().getEqualsSignEqualsSignKeyword_1_0_0_1());
					}
				)
				    |
				(
					(
						{
							$current = forceCreateModelElementAndSet(
								grammarAccess.getEqualsOrNotEqualsAccess().getNotEqualsLeftAction_1_0_1_0(),
								$current);
						}
					)
					otherlv_4='!='
					{
						newLeafNode(otherlv_4, grammarAccess.getEqualsOrNotEqualsAccess().getExclamationMarkEqualsSignKeyword_1_0_1_1());
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getEqualsOrNotEqualsAccess().getRightAndOrParserRuleCall_1_1_0());
					}
					lv_right_5_0=ruleAndOr
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEqualsOrNotEqualsRule());
						}
						set(
							$current,
							"right",
							lv_right_5_0,
							"dk.sdu.gms.dds.DeviceDefinition.AndOr");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleAndOr
entryRuleAndOr returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAndOrRule()); }
	iv_ruleAndOr=ruleAndOr
	{ $current=$iv_ruleAndOr.current; }
	EOF;

// Rule AndOr
ruleAndOr returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getAndOrAccess().getPrimaryParserRuleCall_0());
		}
		this_Primary_0=rulePrimary
		{
			$current = $this_Primary_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				(
					(
						{
							$current = forceCreateModelElementAndSet(
								grammarAccess.getAndOrAccess().getAndLeftAction_1_0_0_0(),
								$current);
						}
					)
					otherlv_2='and'
					{
						newLeafNode(otherlv_2, grammarAccess.getAndOrAccess().getAndKeyword_1_0_0_1());
					}
				)
				    |
				(
					(
						{
							$current = forceCreateModelElementAndSet(
								grammarAccess.getAndOrAccess().getOrLeftAction_1_0_1_0(),
								$current);
						}
					)
					otherlv_4='or'
					{
						newLeafNode(otherlv_4, grammarAccess.getAndOrAccess().getOrKeyword_1_0_1_1());
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getAndOrAccess().getRightPrimaryParserRuleCall_1_1_0());
					}
					lv_right_5_0=rulePrimary
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAndOrRule());
						}
						set(
							$current,
							"right",
							lv_right_5_0,
							"dk.sdu.gms.dds.DeviceDefinition.Primary");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRulePrimary
entryRulePrimary returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPrimaryRule()); }
	iv_rulePrimary=rulePrimary
	{ $current=$iv_rulePrimary.current; }
	EOF;

// Rule Primary
rulePrimary returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getPrimaryAccess().getPrimitiveParserRuleCall_0());
		}
		this_Primitive_0=rulePrimitive
		{
			$current = $this_Primitive_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getPrimaryAccess().getParenthesisParserRuleCall_1());
		}
		this_Parenthesis_1=ruleParenthesis
		{
			$current = $this_Parenthesis_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getPrimaryAccess().getVariableUseParserRuleCall_2());
		}
		this_VariableUse_2=ruleVariableUse
		{
			$current = $this_VariableUse_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getPrimaryAccess().getExternalCallParserRuleCall_3());
		}
		this_ExternalCall_3=ruleExternalCall
		{
			$current = $this_ExternalCall_3.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleExternalCall
entryRuleExternalCall returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExternalCallRule()); }
	iv_ruleExternalCall=ruleExternalCall
	{ $current=$iv_ruleExternalCall.current; }
	EOF;

// Rule ExternalCall
ruleExternalCall returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='call'
		{
			newLeafNode(otherlv_0, grammarAccess.getExternalCallAccess().getCallKeyword_0());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getExternalCallRule());
					}
				}
				otherlv_1=RULE_ID
				{
					newLeafNode(otherlv_1, grammarAccess.getExternalCallAccess().getFuncImportCrossReference_1_0());
				}
			)
		)
		otherlv_2='('
		{
			newLeafNode(otherlv_2, grammarAccess.getExternalCallAccess().getLeftParenthesisKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getExternalCallAccess().getArgsExpParserRuleCall_3_0());
				}
				lv_args_3_0=ruleExp
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getExternalCallRule());
					}
					add(
						$current,
						"args",
						lv_args_3_0,
						"dk.sdu.gms.dds.DeviceDefinition.Exp");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			otherlv_4=','
			{
				newLeafNode(otherlv_4, grammarAccess.getExternalCallAccess().getCommaKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getExternalCallAccess().getArgsExpParserRuleCall_4_1_0());
					}
					lv_args_5_0=ruleExp
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getExternalCallRule());
						}
						add(
							$current,
							"args",
							lv_args_5_0,
							"dk.sdu.gms.dds.DeviceDefinition.Exp");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_6=')'
		{
			newLeafNode(otherlv_6, grammarAccess.getExternalCallAccess().getRightParenthesisKeyword_5());
		}
	)
;

// Entry rule entryRuleInternalVariableUse
entryRuleInternalVariableUse returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getInternalVariableUseRule()); }
	iv_ruleInternalVariableUse=ruleInternalVariableUse
	{ $current=$iv_ruleInternalVariableUse.current; }
	EOF;

// Rule InternalVariableUse
ruleInternalVariableUse returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getInternalVariableUseRule());
				}
			}
			otherlv_0=RULE_ID
			{
				newLeafNode(otherlv_0, grammarAccess.getInternalVariableUseAccess().getRefBindingCrossReference_0());
			}
		)
	)
;

// Entry rule entryRuleExternalVariableUse
entryRuleExternalVariableUse returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExternalVariableUseRule()); }
	iv_ruleExternalVariableUse=ruleExternalVariableUse
	{ $current=$iv_ruleExternalVariableUse.current; }
	EOF;

// Rule ExternalVariableUse
ruleExternalVariableUse returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getExternalVariableUseRule());
					}
				}
				otherlv_0=RULE_ID
				{
					newLeafNode(otherlv_0, grammarAccess.getExternalVariableUseAccess().getObjDeviceCrossReference_0_0());
				}
			)
		)
		(
			otherlv_1='.'
			{
				newLeafNode(otherlv_1, grammarAccess.getExternalVariableUseAccess().getFullStopKeyword_1_0());
			}
			    |
			otherlv_2='->'
			{
				newLeafNode(otherlv_2, grammarAccess.getExternalVariableUseAccess().getHyphenMinusGreaterThanSignKeyword_1_1());
			}
		)
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getExternalVariableUseRule());
					}
				}
				otherlv_3=RULE_ID
				{
					newLeafNode(otherlv_3, grammarAccess.getExternalVariableUseAccess().getRefBindingCrossReference_2_0());
				}
			)
		)
	)
;

// Entry rule entryRuleVariableUse
entryRuleVariableUse returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getVariableUseRule()); }
	iv_ruleVariableUse=ruleVariableUse
	{ $current=$iv_ruleVariableUse.current; }
	EOF;

// Rule VariableUse
ruleVariableUse returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getVariableUseAccess().getInternalVariableUseParserRuleCall_0());
		}
		this_InternalVariableUse_0=ruleInternalVariableUse
		{
			$current = $this_InternalVariableUse_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getVariableUseAccess().getExternalVariableUseParserRuleCall_1());
		}
		this_ExternalVariableUse_1=ruleExternalVariableUse
		{
			$current = $this_ExternalVariableUse_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleParenthesis
entryRuleParenthesis returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getParenthesisRule()); }
	iv_ruleParenthesis=ruleParenthesis
	{ $current=$iv_ruleParenthesis.current; }
	EOF;

// Rule Parenthesis
ruleParenthesis returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='('
		{
			newLeafNode(otherlv_0, grammarAccess.getParenthesisAccess().getLeftParenthesisKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getParenthesisAccess().getExpExpParserRuleCall_1_0());
				}
				lv_exp_1_0=ruleExp
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getParenthesisRule());
					}
					set(
						$current,
						"exp",
						lv_exp_1_0,
						"dk.sdu.gms.dds.DeviceDefinition.Exp");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2=')'
		{
			newLeafNode(otherlv_2, grammarAccess.getParenthesisAccess().getRightParenthesisKeyword_2());
		}
	)
;

RULE_MAC : RULE_HEXBYTE ('-'|':') RULE_HEXBYTE ('-'|':') RULE_HEXBYTE ('-'|':') RULE_HEXBYTE ('-'|':') RULE_HEXBYTE ('-'|':') RULE_HEXBYTE;

fragment RULE_HEXBYTE : ('0'..'9'|'A'..'F') ('0'..'9'|'A'..'F');

RULE_DECIMAL : '-'? RULE_INT ('.' RULE_INT)+;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
