/*
 * generated by Xtext 2.26.0
 */
grammar InternalDeviceDefinition;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package dk.sdu.gms.dds.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package dk.sdu.gms.dds.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import dk.sdu.gms.dds.services.DeviceDefinitionGrammarAccess;

}

@parser::members {

 	private DeviceDefinitionGrammarAccess grammarAccess;

    public InternalDeviceDefinitionParser(TokenStream input, DeviceDefinitionGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "System";
   	}

   	@Override
   	protected DeviceDefinitionGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleSystem
entryRuleSystem returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSystemRule()); }
	iv_ruleSystem=ruleSystem
	{ $current=$iv_ruleSystem.current; }
	EOF;

// Rule System
ruleSystem returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='System'
		{
			newLeafNode(otherlv_0, grammarAccess.getSystemAccess().getSystemKeyword_0());
		}
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getSystemAccess().getColonKeyword_1());
		}
		otherlv_2='wifi'
		{
			newLeafNode(otherlv_2, grammarAccess.getSystemAccess().getWifiKeyword_2());
		}
		(
			(
				lv_wifiSsid_3_0=RULE_STRING
				{
					newLeafNode(lv_wifiSsid_3_0, grammarAccess.getSystemAccess().getWifiSsidSTRINGTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSystemRule());
					}
					setWithLastConsumed(
						$current,
						"wifiSsid",
						lv_wifiSsid_3_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		(
			otherlv_4='with'
			{
				newLeafNode(otherlv_4, grammarAccess.getSystemAccess().getWithKeyword_4_0());
			}
			otherlv_5='password'
			{
				newLeafNode(otherlv_5, grammarAccess.getSystemAccess().getPasswordKeyword_4_1());
			}
			(
				(
					lv_wifiPassword_6_0=RULE_STRING
					{
						newLeafNode(lv_wifiPassword_6_0, grammarAccess.getSystemAccess().getWifiPasswordSTRINGTerminalRuleCall_4_2_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getSystemRule());
						}
						setWithLastConsumed(
							$current,
							"wifiPassword",
							lv_wifiPassword_6_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)
		)?
		otherlv_7='mqtt'
		{
			newLeafNode(otherlv_7, grammarAccess.getSystemAccess().getMqttKeyword_5());
		}
		(
			(
				lv_mqttHost_8_0=RULE_STRING
				{
					newLeafNode(lv_mqttHost_8_0, grammarAccess.getSystemAccess().getMqttHostSTRINGTerminalRuleCall_6_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSystemRule());
					}
					setWithLastConsumed(
						$current,
						"mqttHost",
						lv_mqttHost_8_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		(
			otherlv_9='with'
			{
				newLeafNode(otherlv_9, grammarAccess.getSystemAccess().getWithKeyword_7_0());
			}
			otherlv_10='username'
			{
				newLeafNode(otherlv_10, grammarAccess.getSystemAccess().getUsernameKeyword_7_1());
			}
			(
				(
					lv_mqttUsername_11_0=RULE_STRING
					{
						newLeafNode(lv_mqttUsername_11_0, grammarAccess.getSystemAccess().getMqttUsernameSTRINGTerminalRuleCall_7_2_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getSystemRule());
						}
						setWithLastConsumed(
							$current,
							"mqttUsername",
							lv_mqttUsername_11_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)
			otherlv_12='and'
			{
				newLeafNode(otherlv_12, grammarAccess.getSystemAccess().getAndKeyword_7_3());
			}
			otherlv_13='password'
			{
				newLeafNode(otherlv_13, grammarAccess.getSystemAccess().getPasswordKeyword_7_4());
			}
			(
				(
					lv_mqttPassword_14_0=RULE_STRING
					{
						newLeafNode(lv_mqttPassword_14_0, grammarAccess.getSystemAccess().getMqttPasswordSTRINGTerminalRuleCall_7_5_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getSystemRule());
						}
						setWithLastConsumed(
							$current,
							"mqttPassword",
							lv_mqttPassword_14_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getSystemAccess().getGatewayGatewayParserRuleCall_8_0());
				}
				lv_gateway_15_0=ruleGateway
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSystemRule());
					}
					set(
						$current,
						"gateway",
						lv_gateway_15_0,
						"dk.sdu.gms.dds.DeviceDefinition.Gateway");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getSystemAccess().getGraphsGraphParserRuleCall_9_0());
				}
				lv_graphs_16_0=ruleGraph
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSystemRule());
					}
					add(
						$current,
						"graphs",
						lv_graphs_16_0,
						"dk.sdu.gms.dds.DeviceDefinition.Graph");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRuleGraph
entryRuleGraph returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getGraphRule()); }
	iv_ruleGraph=ruleGraph
	{ $current=$iv_ruleGraph.current; }
	EOF;

// Rule Graph
ruleGraph returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Graph'
		{
			newLeafNode(otherlv_0, grammarAccess.getGraphAccess().getGraphKeyword_0());
		}
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getGraphAccess().getColonKeyword_1());
		}
		otherlv_2='category'
		{
			newLeafNode(otherlv_2, grammarAccess.getGraphAccess().getCategoryKeyword_2());
		}
		(
			(
				lv_category_3_0=RULE_STRING
				{
					newLeafNode(lv_category_3_0, grammarAccess.getGraphAccess().getCategorySTRINGTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getGraphRule());
					}
					setWithLastConsumed(
						$current,
						"category",
						lv_category_3_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_4='title'
		{
			newLeafNode(otherlv_4, grammarAccess.getGraphAccess().getTitleKeyword_4());
		}
		(
			(
				lv_title_5_0=RULE_STRING
				{
					newLeafNode(lv_title_5_0, grammarAccess.getGraphAccess().getTitleSTRINGTerminalRuleCall_5_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getGraphRule());
					}
					setWithLastConsumed(
						$current,
						"title",
						lv_title_5_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_6='x'
		{
			newLeafNode(otherlv_6, grammarAccess.getGraphAccess().getXKeyword_6());
		}
		(
			(
				lv_xlabel_7_0=RULE_STRING
				{
					newLeafNode(lv_xlabel_7_0, grammarAccess.getGraphAccess().getXlabelSTRINGTerminalRuleCall_7_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getGraphRule());
					}
					setWithLastConsumed(
						$current,
						"xlabel",
						lv_xlabel_7_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_8='y'
		{
			newLeafNode(otherlv_8, grammarAccess.getGraphAccess().getYKeyword_8());
		}
		(
			(
				lv_ylabel_9_0=RULE_STRING
				{
					newLeafNode(lv_ylabel_9_0, grammarAccess.getGraphAccess().getYlabelSTRINGTerminalRuleCall_9_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getGraphRule());
					}
					setWithLastConsumed(
						$current,
						"ylabel",
						lv_ylabel_9_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getGraphAccess().getLinesGraphLineParserRuleCall_10_0());
				}
				lv_lines_10_0=ruleGraphLine
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getGraphRule());
					}
					add(
						$current,
						"lines",
						lv_lines_10_0,
						"dk.sdu.gms.dds.DeviceDefinition.GraphLine");
					afterParserOrEnumRuleCall();
				}
			)
		)+
	)
;

// Entry rule entryRuleGraphLine
entryRuleGraphLine returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getGraphLineRule()); }
	iv_ruleGraphLine=ruleGraphLine
	{ $current=$iv_ruleGraphLine.current; }
	EOF;

// Rule GraphLine
ruleGraphLine returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='line'
		{
			newLeafNode(otherlv_0, grammarAccess.getGraphLineAccess().getLineKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getGraphLineAccess().getOutputGraphVariableUseParserRuleCall_1_0());
				}
				lv_output_1_0=ruleGraphVariableUse
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getGraphLineRule());
					}
					set(
						$current,
						"output",
						lv_output_1_0,
						"dk.sdu.gms.dds.DeviceDefinition.GraphVariableUse");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_2='legend'
			{
				newLeafNode(otherlv_2, grammarAccess.getGraphLineAccess().getLegendKeyword_2_0());
			}
			(
				(
					lv_legend_3_0=RULE_STRING
					{
						newLeafNode(lv_legend_3_0, grammarAccess.getGraphLineAccess().getLegendSTRINGTerminalRuleCall_2_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getGraphLineRule());
						}
						setWithLastConsumed(
							$current,
							"legend",
							lv_legend_3_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)
		)?
		(
			otherlv_4='color'
			{
				newLeafNode(otherlv_4, grammarAccess.getGraphLineAccess().getColorKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getGraphLineAccess().getColorColorParserRuleCall_3_1_0());
					}
					lv_color_5_0=ruleColor
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getGraphLineRule());
						}
						set(
							$current,
							"color",
							lv_color_5_0,
							"dk.sdu.gms.dds.DeviceDefinition.Color");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleColor
entryRuleColor returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getColorRule()); }
	iv_ruleColor=ruleColor
	{ $current=$iv_ruleColor.current; }
	EOF;

// Rule Color
ruleColor returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getColorAccess().getRGBAction_0_0(),
						$current);
				}
			)
			otherlv_1='('
			{
				newLeafNode(otherlv_1, grammarAccess.getColorAccess().getLeftParenthesisKeyword_0_1());
			}
			(
				(
					lv_red_2_0=RULE_DECIMAL
					{
						newLeafNode(lv_red_2_0, grammarAccess.getColorAccess().getRedDECIMALTerminalRuleCall_0_2_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getColorRule());
						}
						setWithLastConsumed(
							$current,
							"red",
							lv_red_2_0,
							"dk.sdu.gms.dds.DeviceDefinition.DECIMAL");
					}
				)
			)
			otherlv_3=','
			{
				newLeafNode(otherlv_3, grammarAccess.getColorAccess().getCommaKeyword_0_3());
			}
			(
				(
					lv_green_4_0=RULE_DECIMAL
					{
						newLeafNode(lv_green_4_0, grammarAccess.getColorAccess().getGreenDECIMALTerminalRuleCall_0_4_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getColorRule());
						}
						setWithLastConsumed(
							$current,
							"green",
							lv_green_4_0,
							"dk.sdu.gms.dds.DeviceDefinition.DECIMAL");
					}
				)
			)
			otherlv_5=','
			{
				newLeafNode(otherlv_5, grammarAccess.getColorAccess().getCommaKeyword_0_5());
			}
			(
				(
					lv_blue_6_0=RULE_DECIMAL
					{
						newLeafNode(lv_blue_6_0, grammarAccess.getColorAccess().getBlueDECIMALTerminalRuleCall_0_6_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getColorRule());
						}
						setWithLastConsumed(
							$current,
							"blue",
							lv_blue_6_0,
							"dk.sdu.gms.dds.DeviceDefinition.DECIMAL");
					}
				)
			)
			otherlv_7=')'
			{
				newLeafNode(otherlv_7, grammarAccess.getColorAccess().getRightParenthesisKeyword_0_7());
			}
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getColorAccess().getPresetAction_1_0(),
						$current);
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getColorAccess().getPresetColorPresetEnumRuleCall_1_1_0());
					}
					lv_preset_9_0=ruleColorPreset
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getColorRule());
						}
						set(
							$current,
							"preset",
							lv_preset_9_0,
							"dk.sdu.gms.dds.DeviceDefinition.ColorPreset");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getColorAccess().getRandomAction_2_0(),
						$current);
				}
			)
			otherlv_11='random'
			{
				newLeafNode(otherlv_11, grammarAccess.getColorAccess().getRandomKeyword_2_1());
			}
		)
	)
;

// Entry rule entryRuleGateway
entryRuleGateway returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getGatewayRule()); }
	iv_ruleGateway=ruleGateway
	{ $current=$iv_ruleGateway.current; }
	EOF;

// Rule Gateway
ruleGateway returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Gateway'
		{
			newLeafNode(otherlv_0, grammarAccess.getGatewayAccess().getGatewayKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getGatewayAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getGatewayRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2=':'
		{
			newLeafNode(otherlv_2, grammarAccess.getGatewayAccess().getColonKeyword_2());
		}
		otherlv_3='mac'
		{
			newLeafNode(otherlv_3, grammarAccess.getGatewayAccess().getMacKeyword_3());
		}
		(
			(
				lv_mac_4_0=RULE_MAC
				{
					newLeafNode(lv_mac_4_0, grammarAccess.getGatewayAccess().getMacMACTerminalRuleCall_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getGatewayRule());
					}
					setWithLastConsumed(
						$current,
						"mac",
						lv_mac_4_0,
						"dk.sdu.gms.dds.DeviceDefinition.MAC");
				}
			)
		)
		(
			otherlv_5='error'
			{
				newLeafNode(otherlv_5, grammarAccess.getGatewayAccess().getErrorKeyword_5_0());
			}
			otherlv_6='light'
			{
				newLeafNode(otherlv_6, grammarAccess.getGatewayAccess().getLightKeyword_5_1());
			}
			(
				(
					lv_errorLed_7_0=RULE_INT
					{
						newLeafNode(lv_errorLed_7_0, grammarAccess.getGatewayAccess().getErrorLedINTTerminalRuleCall_5_2_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getGatewayRule());
						}
						addWithLastConsumed(
							$current,
							"errorLed",
							lv_errorLed_7_0,
							"org.eclipse.xtext.common.Terminals.INT");
					}
				)
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getGatewayAccess().getWorkersWorkerParserRuleCall_6_0());
				}
				lv_workers_8_0=ruleWorker
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getGatewayRule());
					}
					add(
						$current,
						"workers",
						lv_workers_8_0,
						"dk.sdu.gms.dds.DeviceDefinition.Worker");
					afterParserOrEnumRuleCall();
				}
			)
		)+
	)
;

// Entry rule entryRuleWorker
entryRuleWorker returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getWorkerRule()); }
	iv_ruleWorker=ruleWorker
	{ $current=$iv_ruleWorker.current; }
	EOF;

// Rule Worker
ruleWorker returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Worker'
		{
			newLeafNode(otherlv_0, grammarAccess.getWorkerAccess().getWorkerKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getWorkerAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getWorkerRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2=':'
		{
			newLeafNode(otherlv_2, grammarAccess.getWorkerAccess().getColonKeyword_2());
		}
		otherlv_3='mac'
		{
			newLeafNode(otherlv_3, grammarAccess.getWorkerAccess().getMacKeyword_3());
		}
		(
			(
				lv_mac_4_0=RULE_MAC
				{
					newLeafNode(lv_mac_4_0, grammarAccess.getWorkerAccess().getMacMACTerminalRuleCall_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getWorkerRule());
					}
					setWithLastConsumed(
						$current,
						"mac",
						lv_mac_4_0,
						"dk.sdu.gms.dds.DeviceDefinition.MAC");
				}
			)
		)
		otherlv_5='sleep'
		{
			newLeafNode(otherlv_5, grammarAccess.getWorkerAccess().getSleepKeyword_5());
		}
		otherlv_6='for'
		{
			newLeafNode(otherlv_6, grammarAccess.getWorkerAccess().getForKeyword_6());
		}
		(
			(
				lv_sleepTime_7_0=RULE_INT
				{
					newLeafNode(lv_sleepTime_7_0, grammarAccess.getWorkerAccess().getSleepTimeINTTerminalRuleCall_7_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getWorkerRule());
					}
					setWithLastConsumed(
						$current,
						"sleepTime",
						lv_sleepTime_7_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getWorkerAccess().getTimeUnitTimeUnitParserRuleCall_8_0());
				}
				lv_timeUnit_8_0=ruleTimeUnit
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getWorkerRule());
					}
					set(
						$current,
						"timeUnit",
						lv_timeUnit_8_0,
						"dk.sdu.gms.dds.DeviceDefinition.TimeUnit");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_9='error'
			{
				newLeafNode(otherlv_9, grammarAccess.getWorkerAccess().getErrorKeyword_9_0());
			}
			otherlv_10='light'
			{
				newLeafNode(otherlv_10, grammarAccess.getWorkerAccess().getLightKeyword_9_1());
			}
			(
				(
					lv_errorLed_11_0=RULE_INT
					{
						newLeafNode(lv_errorLed_11_0, grammarAccess.getWorkerAccess().getErrorLedINTTerminalRuleCall_9_2_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getWorkerRule());
						}
						addWithLastConsumed(
							$current,
							"errorLed",
							lv_errorLed_11_0,
							"org.eclipse.xtext.common.Terminals.INT");
					}
				)
			)
		)?
		(
			otherlv_12='retries'
			{
				newLeafNode(otherlv_12, grammarAccess.getWorkerAccess().getRetriesKeyword_10_0());
			}
			(
				(
					lv_retries_13_0=RULE_INT
					{
						newLeafNode(lv_retries_13_0, grammarAccess.getWorkerAccess().getRetriesINTTerminalRuleCall_10_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getWorkerRule());
						}
						addWithLastConsumed(
							$current,
							"retries",
							lv_retries_13_0,
							"org.eclipse.xtext.common.Terminals.INT");
					}
				)
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getWorkerAccess().getDevicesDeviceParserRuleCall_11_0());
				}
				lv_devices_14_0=ruleDevice
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getWorkerRule());
					}
					add(
						$current,
						"devices",
						lv_devices_14_0,
						"dk.sdu.gms.dds.DeviceDefinition.Device");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRuleDevice
entryRuleDevice returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDeviceRule()); }
	iv_ruleDevice=ruleDevice
	{ $current=$iv_ruleDevice.current; }
	EOF;

// Rule Device
ruleDevice returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getDeviceAccess().getSensorParserRuleCall_0());
		}
		this_Sensor_0=ruleSensor
		{
			$current = $this_Sensor_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getDeviceAccess().getActuatorParserRuleCall_1());
		}
		this_Actuator_1=ruleActuator
		{
			$current = $this_Actuator_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleSensor
entryRuleSensor returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSensorRule()); }
	iv_ruleSensor=ruleSensor
	{ $current=$iv_ruleSensor.current; }
	EOF;

// Rule Sensor
ruleSensor returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Sensor'
		{
			newLeafNode(otherlv_0, grammarAccess.getSensorAccess().getSensorKeyword_0());
		}
		(
			(
				lv_type_1_0=RULE_ID
				{
					newLeafNode(lv_type_1_0, grammarAccess.getSensorAccess().getTypeIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSensorRule());
					}
					setWithLastConsumed(
						$current,
						"type",
						lv_type_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			(
				lv_name_2_0=RULE_ID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getSensorAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSensorRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_3=':'
		{
			newLeafNode(otherlv_3, grammarAccess.getSensorAccess().getColonKeyword_3());
		}
		(
			otherlv_4='pins'
			{
				newLeafNode(otherlv_4, grammarAccess.getSensorAccess().getPinsKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getSensorAccess().getPinsPinParserRuleCall_4_1_0());
					}
					lv_pins_5_0=rulePin
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSensorRule());
						}
						add(
							$current,
							"pins",
							lv_pins_5_0,
							"dk.sdu.gms.dds.DeviceDefinition.Pin");
						afterParserOrEnumRuleCall();
					}
				)
			)*
			(
				otherlv_6=','
				{
					newLeafNode(otherlv_6, grammarAccess.getSensorAccess().getCommaKeyword_4_2_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getSensorAccess().getPinsPinParserRuleCall_4_2_1_0());
						}
						lv_pins_7_0=rulePin
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getSensorRule());
							}
							add(
								$current,
								"pins",
								lv_pins_7_0,
								"dk.sdu.gms.dds.DeviceDefinition.Pin");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getSensorAccess().getOutputsSensorOutputParserRuleCall_5_0());
				}
				lv_outputs_8_0=ruleSensorOutput
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSensorRule());
					}
					add(
						$current,
						"outputs",
						lv_outputs_8_0,
						"dk.sdu.gms.dds.DeviceDefinition.SensorOutput");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getSensorAccess().getSettingsSettingParserRuleCall_6_0());
				}
				lv_settings_9_0=ruleSetting
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSensorRule());
					}
					add(
						$current,
						"settings",
						lv_settings_9_0,
						"dk.sdu.gms.dds.DeviceDefinition.Setting");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			otherlv_10='sample'
			{
				newLeafNode(otherlv_10, grammarAccess.getSensorAccess().getSampleKeyword_7_0());
			}
			otherlv_11='if'
			{
				newLeafNode(otherlv_11, grammarAccess.getSensorAccess().getIfKeyword_7_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getSensorAccess().getPredicateExpParserRuleCall_7_2_0());
					}
					lv_predicate_12_0=ruleExp
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSensorRule());
						}
						add(
							$current,
							"predicate",
							lv_predicate_12_0,
							"dk.sdu.gms.dds.DeviceDefinition.Exp");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRulePin
entryRulePin returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPinRule()); }
	iv_rulePin=rulePin
	{ $current=$iv_rulePin.current; }
	EOF;

// Rule Pin
rulePin returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getPinAccess().getTypePinTypeParserRuleCall_0_0());
				}
				lv_type_0_0=rulePinType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPinRule());
					}
					set(
						$current,
						"type",
						lv_type_0_0,
						"dk.sdu.gms.dds.DeviceDefinition.PinType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				lv_number_1_0=RULE_INT
				{
					newLeafNode(lv_number_1_0, grammarAccess.getPinAccess().getNumberINTTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPinRule());
					}
					setWithLastConsumed(
						$current,
						"number",
						lv_number_1_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
	)
;

// Entry rule entryRulePinType
entryRulePinType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPinTypeRule()); }
	iv_rulePinType=rulePinType
	{ $current=$iv_rulePinType.current; }
	EOF;

// Rule PinType
rulePinType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getPinTypeAccess().getADCAction_0_0(),
						$current);
				}
			)
			otherlv_1='adc'
			{
				newLeafNode(otherlv_1, grammarAccess.getPinTypeAccess().getAdcKeyword_0_1());
			}
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getPinTypeAccess().getDACAction_1_0(),
						$current);
				}
			)
			otherlv_3='dac'
			{
				newLeafNode(otherlv_3, grammarAccess.getPinTypeAccess().getDacKeyword_1_1());
			}
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getPinTypeAccess().getGenericInAction_2_0(),
						$current);
				}
			)
			otherlv_5='in'
			{
				newLeafNode(otherlv_5, grammarAccess.getPinTypeAccess().getInKeyword_2_1());
			}
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getPinTypeAccess().getGenericOutAction_3_0(),
						$current);
				}
			)
			otherlv_7='out'
			{
				newLeafNode(otherlv_7, grammarAccess.getPinTypeAccess().getOutKeyword_3_1());
			}
		)
	)
;

// Entry rule entryRuleTimeUnit
entryRuleTimeUnit returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTimeUnitRule()); }
	iv_ruleTimeUnit=ruleTimeUnit
	{ $current=$iv_ruleTimeUnit.current; }
	EOF;

// Rule TimeUnit
ruleTimeUnit returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getTimeUnitAccess().getSecondAction_0_0(),
						$current);
				}
			)
			(
				otherlv_1='second'
				{
					newLeafNode(otherlv_1, grammarAccess.getTimeUnitAccess().getSecondKeyword_0_1_0());
				}
				    |
				otherlv_2='seconds'
				{
					newLeafNode(otherlv_2, grammarAccess.getTimeUnitAccess().getSecondsKeyword_0_1_1());
				}
			)
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getTimeUnitAccess().getMinuteAction_1_0(),
						$current);
				}
			)
			(
				otherlv_4='minute'
				{
					newLeafNode(otherlv_4, grammarAccess.getTimeUnitAccess().getMinuteKeyword_1_1_0());
				}
				    |
				otherlv_5='minutes'
				{
					newLeafNode(otherlv_5, grammarAccess.getTimeUnitAccess().getMinutesKeyword_1_1_1());
				}
			)
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getTimeUnitAccess().getHourAction_2_0(),
						$current);
				}
			)
			(
				otherlv_7='hour'
				{
					newLeafNode(otherlv_7, grammarAccess.getTimeUnitAccess().getHourKeyword_2_1_0());
				}
				    |
				otherlv_8='hours'
				{
					newLeafNode(otherlv_8, grammarAccess.getTimeUnitAccess().getHoursKeyword_2_1_1());
				}
			)
		)
	)
;

// Entry rule entryRuleSensorOutput
entryRuleSensorOutput returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSensorOutputRule()); }
	iv_ruleSensorOutput=ruleSensorOutput
	{ $current=$iv_ruleSensorOutput.current; }
	EOF;

// Rule SensorOutput
ruleSensorOutput returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='out'
		{
			newLeafNode(otherlv_0, grammarAccess.getSensorOutputAccess().getOutKeyword_0());
		}
		(
			(
				lv_output_1_0=RULE_STRING
				{
					newLeafNode(lv_output_1_0, grammarAccess.getSensorOutputAccess().getOutputSTRINGTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSensorOutputRule());
					}
					setWithLastConsumed(
						$current,
						"output",
						lv_output_1_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)?
		otherlv_2='as'
		{
			newLeafNode(otherlv_2, grammarAccess.getSensorOutputAccess().getAsKeyword_2());
		}
		(
			(
				lv_name_3_0=RULE_ID
				{
					newLeafNode(lv_name_3_0, grammarAccess.getSensorOutputAccess().getNameIDTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSensorOutputRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_3_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			otherlv_4='with'
			{
				newLeafNode(otherlv_4, grammarAccess.getSensorOutputAccess().getWithKeyword_4_0());
			}
			otherlv_5='mapping'
			{
				newLeafNode(otherlv_5, grammarAccess.getSensorOutputAccess().getMappingKeyword_4_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getSensorOutputAccess().getMappingExpParserRuleCall_4_2_0());
					}
					lv_mapping_6_0=ruleExp
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSensorOutputRule());
						}
						set(
							$current,
							"mapping",
							lv_mapping_6_0,
							"dk.sdu.gms.dds.DeviceDefinition.Exp");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleActuator
entryRuleActuator returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getActuatorRule()); }
	iv_ruleActuator=ruleActuator
	{ $current=$iv_ruleActuator.current; }
	EOF;

// Rule Actuator
ruleActuator returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Actuator'
		{
			newLeafNode(otherlv_0, grammarAccess.getActuatorAccess().getActuatorKeyword_0());
		}
		(
			(
				lv_type_1_0=RULE_ID
				{
					newLeafNode(lv_type_1_0, grammarAccess.getActuatorAccess().getTypeIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getActuatorRule());
					}
					setWithLastConsumed(
						$current,
						"type",
						lv_type_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			(
				lv_name_2_0=RULE_ID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getActuatorAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getActuatorRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_3=':'
		{
			newLeafNode(otherlv_3, grammarAccess.getActuatorAccess().getColonKeyword_3());
		}
		otherlv_4='pins'
		{
			newLeafNode(otherlv_4, grammarAccess.getActuatorAccess().getPinsKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getActuatorAccess().getPinsPinParserRuleCall_5_0());
				}
				lv_pins_5_0=rulePin
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getActuatorRule());
					}
					add(
						$current,
						"pins",
						lv_pins_5_0,
						"dk.sdu.gms.dds.DeviceDefinition.Pin");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			otherlv_6=','
			{
				newLeafNode(otherlv_6, grammarAccess.getActuatorAccess().getCommaKeyword_6_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getActuatorAccess().getPinsPinParserRuleCall_6_1_0());
					}
					lv_pins_7_0=rulePin
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getActuatorRule());
						}
						add(
							$current,
							"pins",
							lv_pins_7_0,
							"dk.sdu.gms.dds.DeviceDefinition.Pin");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getActuatorAccess().getSettingsSettingParserRuleCall_7_0());
				}
				lv_settings_8_0=ruleSetting
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getActuatorRule());
					}
					add(
						$current,
						"settings",
						lv_settings_8_0,
						"dk.sdu.gms.dds.DeviceDefinition.Setting");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getActuatorAccess().getTriggerTriggerParserRuleCall_8_0());
				}
				lv_trigger_9_0=ruleTrigger
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getActuatorRule());
					}
					set(
						$current,
						"trigger",
						lv_trigger_9_0,
						"dk.sdu.gms.dds.DeviceDefinition.Trigger");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleTrigger
entryRuleTrigger returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTriggerRule()); }
	iv_ruleTrigger=ruleTrigger
	{ $current=$iv_ruleTrigger.current; }
	EOF;

// Rule Trigger
ruleTrigger returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getTriggerAccess().getWhenAction_0_0(),
						$current);
				}
			)
			otherlv_1='when'
			{
				newLeafNode(otherlv_1, grammarAccess.getTriggerAccess().getWhenKeyword_0_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getTriggerAccess().getExpExpParserRuleCall_0_2_0());
					}
					lv_exp_2_0=ruleExp
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTriggerRule());
						}
						set(
							$current,
							"exp",
							lv_exp_2_0,
							"dk.sdu.gms.dds.DeviceDefinition.Exp");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getTriggerAccess().getOnOffAction_1_0(),
						$current);
				}
			)
			otherlv_4='on'
			{
				newLeafNode(otherlv_4, grammarAccess.getTriggerAccess().getOnKeyword_1_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getTriggerAccess().getOnExpExpParserRuleCall_1_2_0());
					}
					lv_onExp_5_0=ruleExp
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTriggerRule());
						}
						set(
							$current,
							"onExp",
							lv_onExp_5_0,
							"dk.sdu.gms.dds.DeviceDefinition.Exp");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					otherlv_6='off'
					{
						newLeafNode(otherlv_6, grammarAccess.getTriggerAccess().getOffKeyword_1_3_0_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getTriggerAccess().getOffExpExpParserRuleCall_1_3_0_1_0());
							}
							lv_offExp_7_0=ruleExp
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getTriggerRule());
								}
								set(
									$current,
									"offExp",
									lv_offExp_7_0,
									"dk.sdu.gms.dds.DeviceDefinition.Exp");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)
				    |
				(
					otherlv_8='run'
					{
						newLeafNode(otherlv_8, grammarAccess.getTriggerAccess().getRunKeyword_1_3_1_0());
					}
					otherlv_9='for'
					{
						newLeafNode(otherlv_9, grammarAccess.getTriggerAccess().getForKeyword_1_3_1_1());
					}
					(
						(
							lv_time_10_0=RULE_INT
							{
								newLeafNode(lv_time_10_0, grammarAccess.getTriggerAccess().getTimeINTTerminalRuleCall_1_3_1_2_0());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getTriggerRule());
								}
								setWithLastConsumed(
									$current,
									"time",
									lv_time_10_0,
									"org.eclipse.xtext.common.Terminals.INT");
							}
						)
					)
					(
						(
							{
								newCompositeNode(grammarAccess.getTriggerAccess().getUnitTimeUnitParserRuleCall_1_3_1_3_0());
							}
							lv_unit_11_0=ruleTimeUnit
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getTriggerRule());
								}
								set(
									$current,
									"unit",
									lv_unit_11_0,
									"dk.sdu.gms.dds.DeviceDefinition.TimeUnit");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)
			)
		)
	)
;

// Entry rule entryRuleSetting
entryRuleSetting returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSettingRule()); }
	iv_ruleSetting=ruleSetting
	{ $current=$iv_ruleSetting.current; }
	EOF;

// Rule Setting
ruleSetting returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='setting'
		{
			newLeafNode(otherlv_0, grammarAccess.getSettingAccess().getSettingKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getSettingAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSettingRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='='
		{
			newLeafNode(otherlv_2, grammarAccess.getSettingAccess().getEqualsSignKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSettingAccess().getValuePrimitiveParserRuleCall_3_0());
				}
				lv_value_3_0=rulePrimitive
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSettingRule());
					}
					set(
						$current,
						"value",
						lv_value_3_0,
						"dk.sdu.gms.dds.DeviceDefinition.Primitive");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRulePrimitive
entryRulePrimitive returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPrimitiveRule()); }
	iv_rulePrimitive=rulePrimitive
	{ $current=$iv_rulePrimitive.current; }
	EOF;

// Rule Primitive
rulePrimitive returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getPrimitiveAccess().getDecimalPrimitiveAction_0_0(),
						$current);
				}
			)
			(
				(
					lv_value_1_0=RULE_DECIMAL
					{
						newLeafNode(lv_value_1_0, grammarAccess.getPrimitiveAccess().getValueDECIMALTerminalRuleCall_0_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getPrimitiveRule());
						}
						setWithLastConsumed(
							$current,
							"value",
							lv_value_1_0,
							"dk.sdu.gms.dds.DeviceDefinition.DECIMAL");
					}
				)
			)
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getPrimitiveAccess().getIntPrimitiveAction_1_0(),
						$current);
				}
			)
			(
				(
					lv_value_3_0=RULE_INT
					{
						newLeafNode(lv_value_3_0, grammarAccess.getPrimitiveAccess().getValueINTTerminalRuleCall_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getPrimitiveRule());
						}
						setWithLastConsumed(
							$current,
							"value",
							lv_value_3_0,
							"org.eclipse.xtext.common.Terminals.INT");
					}
				)
			)
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getPrimitiveAccess().getBooleanTrueAction_2_0(),
						$current);
				}
			)
			otherlv_5='TRUE'
			{
				newLeafNode(otherlv_5, grammarAccess.getPrimitiveAccess().getTRUEKeyword_2_1());
			}
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getPrimitiveAccess().getBooleanFalseAction_3_0(),
						$current);
				}
			)
			otherlv_7='FALSE'
			{
				newLeafNode(otherlv_7, grammarAccess.getPrimitiveAccess().getFALSEKeyword_3_1());
			}
		)
	)
;

// Entry rule entryRuleExp
entryRuleExp returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExpRule()); }
	iv_ruleExp=ruleExp
	{ $current=$iv_ruleExp.current; }
	EOF;

// Rule Exp
ruleExp returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getExpAccess().getFactorParserRuleCall_0());
		}
		this_Factor_0=ruleFactor
		{
			$current = $this_Factor_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				(
					(
						{
							$current = forceCreateModelElementAndSet(
								grammarAccess.getExpAccess().getPlusLeftAction_1_0_0_0(),
								$current);
						}
					)
					otherlv_2='+'
					{
						newLeafNode(otherlv_2, grammarAccess.getExpAccess().getPlusSignKeyword_1_0_0_1());
					}
				)
				    |
				(
					(
						{
							$current = forceCreateModelElementAndSet(
								grammarAccess.getExpAccess().getMinusLeftAction_1_0_1_0(),
								$current);
						}
					)
					otherlv_4='-'
					{
						newLeafNode(otherlv_4, grammarAccess.getExpAccess().getHyphenMinusKeyword_1_0_1_1());
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getExpAccess().getRightFactorParserRuleCall_1_1_0());
					}
					lv_right_5_0=ruleFactor
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getExpRule());
						}
						set(
							$current,
							"right",
							lv_right_5_0,
							"dk.sdu.gms.dds.DeviceDefinition.Factor");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleFactor
entryRuleFactor returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFactorRule()); }
	iv_ruleFactor=ruleFactor
	{ $current=$iv_ruleFactor.current; }
	EOF;

// Rule Factor
ruleFactor returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getFactorAccess().getCompareParserRuleCall_0());
		}
		this_Compare_0=ruleCompare
		{
			$current = $this_Compare_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				(
					(
						{
							$current = forceCreateModelElementAndSet(
								grammarAccess.getFactorAccess().getMultLeftAction_1_0_0_0(),
								$current);
						}
					)
					otherlv_2='*'
					{
						newLeafNode(otherlv_2, grammarAccess.getFactorAccess().getAsteriskKeyword_1_0_0_1());
					}
				)
				    |
				(
					(
						{
							$current = forceCreateModelElementAndSet(
								grammarAccess.getFactorAccess().getDivLeftAction_1_0_1_0(),
								$current);
						}
					)
					otherlv_4='/'
					{
						newLeafNode(otherlv_4, grammarAccess.getFactorAccess().getSolidusKeyword_1_0_1_1());
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getFactorAccess().getRightCompareParserRuleCall_1_1_0());
					}
					lv_right_5_0=ruleCompare
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getFactorRule());
						}
						set(
							$current,
							"right",
							lv_right_5_0,
							"dk.sdu.gms.dds.DeviceDefinition.Compare");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleCompare
entryRuleCompare returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCompareRule()); }
	iv_ruleCompare=ruleCompare
	{ $current=$iv_ruleCompare.current; }
	EOF;

// Rule Compare
ruleCompare returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getCompareAccess().getCompareOrEqualsParserRuleCall_0());
		}
		this_CompareOrEquals_0=ruleCompareOrEquals
		{
			$current = $this_CompareOrEquals_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				(
					(
						{
							$current = forceCreateModelElementAndSet(
								grammarAccess.getCompareAccess().getGreaterLeftAction_1_0_0_0(),
								$current);
						}
					)
					otherlv_2='>'
					{
						newLeafNode(otherlv_2, grammarAccess.getCompareAccess().getGreaterThanSignKeyword_1_0_0_1());
					}
				)
				    |
				(
					(
						{
							$current = forceCreateModelElementAndSet(
								grammarAccess.getCompareAccess().getLesserLeftAction_1_0_1_0(),
								$current);
						}
					)
					otherlv_4='<'
					{
						newLeafNode(otherlv_4, grammarAccess.getCompareAccess().getLessThanSignKeyword_1_0_1_1());
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getCompareAccess().getRightCompareOrEqualsParserRuleCall_1_1_0());
					}
					lv_right_5_0=ruleCompareOrEquals
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCompareRule());
						}
						set(
							$current,
							"right",
							lv_right_5_0,
							"dk.sdu.gms.dds.DeviceDefinition.CompareOrEquals");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleCompareOrEquals
entryRuleCompareOrEquals returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCompareOrEqualsRule()); }
	iv_ruleCompareOrEquals=ruleCompareOrEquals
	{ $current=$iv_ruleCompareOrEquals.current; }
	EOF;

// Rule CompareOrEquals
ruleCompareOrEquals returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getCompareOrEqualsAccess().getEqualsOrNotEqualsParserRuleCall_0());
		}
		this_EqualsOrNotEquals_0=ruleEqualsOrNotEquals
		{
			$current = $this_EqualsOrNotEquals_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				(
					(
						{
							$current = forceCreateModelElementAndSet(
								grammarAccess.getCompareOrEqualsAccess().getGreaterOrEqualsLeftAction_1_0_0_0(),
								$current);
						}
					)
					otherlv_2='>='
					{
						newLeafNode(otherlv_2, grammarAccess.getCompareOrEqualsAccess().getGreaterThanSignEqualsSignKeyword_1_0_0_1());
					}
				)
				    |
				(
					(
						{
							$current = forceCreateModelElementAndSet(
								grammarAccess.getCompareOrEqualsAccess().getLesserOrEqualsLeftAction_1_0_1_0(),
								$current);
						}
					)
					otherlv_4='<='
					{
						newLeafNode(otherlv_4, grammarAccess.getCompareOrEqualsAccess().getLessThanSignEqualsSignKeyword_1_0_1_1());
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getCompareOrEqualsAccess().getRightEqualsOrNotEqualsParserRuleCall_1_1_0());
					}
					lv_right_5_0=ruleEqualsOrNotEquals
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCompareOrEqualsRule());
						}
						set(
							$current,
							"right",
							lv_right_5_0,
							"dk.sdu.gms.dds.DeviceDefinition.EqualsOrNotEquals");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleEqualsOrNotEquals
entryRuleEqualsOrNotEquals returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEqualsOrNotEqualsRule()); }
	iv_ruleEqualsOrNotEquals=ruleEqualsOrNotEquals
	{ $current=$iv_ruleEqualsOrNotEquals.current; }
	EOF;

// Rule EqualsOrNotEquals
ruleEqualsOrNotEquals returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getEqualsOrNotEqualsAccess().getAndOrParserRuleCall_0());
		}
		this_AndOr_0=ruleAndOr
		{
			$current = $this_AndOr_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				(
					(
						{
							$current = forceCreateModelElementAndSet(
								grammarAccess.getEqualsOrNotEqualsAccess().getEqualsLeftAction_1_0_0_0(),
								$current);
						}
					)
					otherlv_2='=='
					{
						newLeafNode(otherlv_2, grammarAccess.getEqualsOrNotEqualsAccess().getEqualsSignEqualsSignKeyword_1_0_0_1());
					}
				)
				    |
				(
					(
						{
							$current = forceCreateModelElementAndSet(
								grammarAccess.getEqualsOrNotEqualsAccess().getNotEqualsLeftAction_1_0_1_0(),
								$current);
						}
					)
					otherlv_4='!='
					{
						newLeafNode(otherlv_4, grammarAccess.getEqualsOrNotEqualsAccess().getExclamationMarkEqualsSignKeyword_1_0_1_1());
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getEqualsOrNotEqualsAccess().getRightAndOrParserRuleCall_1_1_0());
					}
					lv_right_5_0=ruleAndOr
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEqualsOrNotEqualsRule());
						}
						set(
							$current,
							"right",
							lv_right_5_0,
							"dk.sdu.gms.dds.DeviceDefinition.AndOr");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleAndOr
entryRuleAndOr returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAndOrRule()); }
	iv_ruleAndOr=ruleAndOr
	{ $current=$iv_ruleAndOr.current; }
	EOF;

// Rule AndOr
ruleAndOr returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getAndOrAccess().getPrimaryParserRuleCall_0());
		}
		this_Primary_0=rulePrimary
		{
			$current = $this_Primary_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				(
					(
						{
							$current = forceCreateModelElementAndSet(
								grammarAccess.getAndOrAccess().getAndLeftAction_1_0_0_0(),
								$current);
						}
					)
					otherlv_2='and'
					{
						newLeafNode(otherlv_2, grammarAccess.getAndOrAccess().getAndKeyword_1_0_0_1());
					}
				)
				    |
				(
					(
						{
							$current = forceCreateModelElementAndSet(
								grammarAccess.getAndOrAccess().getOrLeftAction_1_0_1_0(),
								$current);
						}
					)
					otherlv_4='or'
					{
						newLeafNode(otherlv_4, grammarAccess.getAndOrAccess().getOrKeyword_1_0_1_1());
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getAndOrAccess().getRightPrimaryParserRuleCall_1_1_0());
					}
					lv_right_5_0=rulePrimary
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAndOrRule());
						}
						set(
							$current,
							"right",
							lv_right_5_0,
							"dk.sdu.gms.dds.DeviceDefinition.Primary");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRulePrimary
entryRulePrimary returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPrimaryRule()); }
	iv_rulePrimary=rulePrimary
	{ $current=$iv_rulePrimary.current; }
	EOF;

// Rule Primary
rulePrimary returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getPrimaryAccess().getPrimitiveParserRuleCall_0());
		}
		this_Primitive_0=rulePrimitive
		{
			$current = $this_Primitive_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getPrimaryAccess().getParenthesisParserRuleCall_1());
		}
		this_Parenthesis_1=ruleParenthesis
		{
			$current = $this_Parenthesis_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getPrimaryAccess().getVariableUseParserRuleCall_2());
		}
		this_VariableUse_2=ruleVariableUse
		{
			$current = $this_VariableUse_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getPrimaryAccess().getExternalCallParserRuleCall_3());
		}
		this_ExternalCall_3=ruleExternalCall
		{
			$current = $this_ExternalCall_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getPrimaryAccess().getValueAction_4_0(),
						$current);
				}
			)
			otherlv_5='value'
			{
				newLeafNode(otherlv_5, grammarAccess.getPrimaryAccess().getValueKeyword_4_1());
			}
		)
	)
;

// Entry rule entryRuleExternalCall
entryRuleExternalCall returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExternalCallRule()); }
	iv_ruleExternalCall=ruleExternalCall
	{ $current=$iv_ruleExternalCall.current; }
	EOF;

// Rule ExternalCall
ruleExternalCall returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='call'
		{
			newLeafNode(otherlv_0, grammarAccess.getExternalCallAccess().getCallKeyword_0());
		}
		(
			(
				lv_func_1_0=RULE_ID
				{
					newLeafNode(lv_func_1_0, grammarAccess.getExternalCallAccess().getFuncIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getExternalCallRule());
					}
					setWithLastConsumed(
						$current,
						"func",
						lv_func_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='('
		{
			newLeafNode(otherlv_2, grammarAccess.getExternalCallAccess().getLeftParenthesisKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getExternalCallAccess().getArgsExpParserRuleCall_3_0());
				}
				lv_args_3_0=ruleExp
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getExternalCallRule());
					}
					add(
						$current,
						"args",
						lv_args_3_0,
						"dk.sdu.gms.dds.DeviceDefinition.Exp");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			otherlv_4=','
			{
				newLeafNode(otherlv_4, grammarAccess.getExternalCallAccess().getCommaKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getExternalCallAccess().getArgsExpParserRuleCall_4_1_0());
					}
					lv_args_5_0=ruleExp
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getExternalCallRule());
						}
						add(
							$current,
							"args",
							lv_args_5_0,
							"dk.sdu.gms.dds.DeviceDefinition.Exp");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_6=')'
		{
			newLeafNode(otherlv_6, grammarAccess.getExternalCallAccess().getRightParenthesisKeyword_5());
		}
	)
;

// Entry rule entryRuleInternalVariableUse
entryRuleInternalVariableUse returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getInternalVariableUseRule()); }
	iv_ruleInternalVariableUse=ruleInternalVariableUse
	{ $current=$iv_ruleInternalVariableUse.current; }
	EOF;

// Rule InternalVariableUse
ruleInternalVariableUse returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getInternalVariableUseRule());
				}
			}
			otherlv_0=RULE_ID
			{
				newLeafNode(otherlv_0, grammarAccess.getInternalVariableUseAccess().getRefBindingCrossReference_0());
			}
		)
	)
;

// Entry rule entryRuleExternalVariableUse
entryRuleExternalVariableUse returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExternalVariableUseRule()); }
	iv_ruleExternalVariableUse=ruleExternalVariableUse
	{ $current=$iv_ruleExternalVariableUse.current; }
	EOF;

// Rule ExternalVariableUse
ruleExternalVariableUse returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getExternalVariableUseRule());
					}
				}
				otherlv_0=RULE_ID
				{
					newLeafNode(otherlv_0, grammarAccess.getExternalVariableUseAccess().getObjDeviceCrossReference_0_0());
				}
			)
		)
		(
			otherlv_1='.'
			{
				newLeafNode(otherlv_1, grammarAccess.getExternalVariableUseAccess().getFullStopKeyword_1_0());
			}
			    |
			otherlv_2='->'
			{
				newLeafNode(otherlv_2, grammarAccess.getExternalVariableUseAccess().getHyphenMinusGreaterThanSignKeyword_1_1());
			}
		)
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getExternalVariableUseRule());
					}
				}
				otherlv_3=RULE_ID
				{
					newLeafNode(otherlv_3, grammarAccess.getExternalVariableUseAccess().getRefBindingCrossReference_2_0());
				}
			)
		)
	)
;

// Entry rule entryRuleGraphVariableUse
entryRuleGraphVariableUse returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getGraphVariableUseRule()); }
	iv_ruleGraphVariableUse=ruleGraphVariableUse
	{ $current=$iv_ruleGraphVariableUse.current; }
	EOF;

// Rule GraphVariableUse
ruleGraphVariableUse returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getGraphVariableUseRule());
					}
				}
				otherlv_0=RULE_ID
				{
					newLeafNode(otherlv_0, grammarAccess.getGraphVariableUseAccess().getWorkerWorkerCrossReference_0_0());
				}
			)
		)
		(
			otherlv_1='.'
			{
				newLeafNode(otherlv_1, grammarAccess.getGraphVariableUseAccess().getFullStopKeyword_1_0());
			}
			    |
			otherlv_2='->'
			{
				newLeafNode(otherlv_2, grammarAccess.getGraphVariableUseAccess().getHyphenMinusGreaterThanSignKeyword_1_1());
			}
		)
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getGraphVariableUseRule());
					}
				}
				otherlv_3=RULE_ID
				{
					newLeafNode(otherlv_3, grammarAccess.getGraphVariableUseAccess().getDeviceDeviceCrossReference_2_0());
				}
			)
		)
		(
			otherlv_4='.'
			{
				newLeafNode(otherlv_4, grammarAccess.getGraphVariableUseAccess().getFullStopKeyword_3_0());
			}
			    |
			otherlv_5='->'
			{
				newLeafNode(otherlv_5, grammarAccess.getGraphVariableUseAccess().getHyphenMinusGreaterThanSignKeyword_3_1());
			}
		)
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getGraphVariableUseRule());
					}
				}
				otherlv_6=RULE_ID
				{
					newLeafNode(otherlv_6, grammarAccess.getGraphVariableUseAccess().getRefBindingCrossReference_4_0());
				}
			)
		)
	)
;

// Entry rule entryRuleVariableUse
entryRuleVariableUse returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getVariableUseRule()); }
	iv_ruleVariableUse=ruleVariableUse
	{ $current=$iv_ruleVariableUse.current; }
	EOF;

// Rule VariableUse
ruleVariableUse returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getVariableUseAccess().getInternalVariableUseParserRuleCall_0());
		}
		this_InternalVariableUse_0=ruleInternalVariableUse
		{
			$current = $this_InternalVariableUse_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getVariableUseAccess().getExternalVariableUseParserRuleCall_1());
		}
		this_ExternalVariableUse_1=ruleExternalVariableUse
		{
			$current = $this_ExternalVariableUse_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getVariableUseAccess().getGraphVariableUseParserRuleCall_2());
		}
		this_GraphVariableUse_2=ruleGraphVariableUse
		{
			$current = $this_GraphVariableUse_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleParenthesis
entryRuleParenthesis returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getParenthesisRule()); }
	iv_ruleParenthesis=ruleParenthesis
	{ $current=$iv_ruleParenthesis.current; }
	EOF;

// Rule Parenthesis
ruleParenthesis returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='('
		{
			newLeafNode(otherlv_0, grammarAccess.getParenthesisAccess().getLeftParenthesisKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getParenthesisAccess().getExpExpParserRuleCall_1_0());
				}
				lv_exp_1_0=ruleExp
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getParenthesisRule());
					}
					set(
						$current,
						"exp",
						lv_exp_1_0,
						"dk.sdu.gms.dds.DeviceDefinition.Exp");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2=')'
		{
			newLeafNode(otherlv_2, grammarAccess.getParenthesisAccess().getRightParenthesisKeyword_2());
		}
	)
;

// Rule ColorPreset
ruleColorPreset returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='red'
			{
				$current = grammarAccess.getColorPresetAccess().getRedEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getColorPresetAccess().getRedEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='green'
			{
				$current = grammarAccess.getColorPresetAccess().getGreenEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getColorPresetAccess().getGreenEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='blue'
			{
				$current = grammarAccess.getColorPresetAccess().getBlueEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getColorPresetAccess().getBlueEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='yellow'
			{
				$current = grammarAccess.getColorPresetAccess().getYellowEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getColorPresetAccess().getYellowEnumLiteralDeclaration_3());
			}
		)
	)
;

RULE_MAC : RULE_HEXBYTE ':' RULE_HEXBYTE ':' RULE_HEXBYTE ':' RULE_HEXBYTE ':' RULE_HEXBYTE ':' RULE_HEXBYTE;

fragment RULE_HEXBYTE : ('0'..'9'|'A'..'F') ('0'..'9'|'A'..'F');

RULE_DECIMAL : '-'? RULE_INT ('.' RULE_INT)+;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
