/**
 * generated by Xtext 2.26.0
 */
package dk.sdu.gms.dds.deviceDefinition.impl;

import dk.sdu.gms.dds.deviceDefinition.DeviceDefinitionPackage;
import dk.sdu.gms.dds.deviceDefinition.Graph;
import dk.sdu.gms.dds.deviceDefinition.GraphLine;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Graph</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link dk.sdu.gms.dds.deviceDefinition.impl.GraphImpl#getCategory <em>Category</em>}</li>
 *   <li>{@link dk.sdu.gms.dds.deviceDefinition.impl.GraphImpl#getTitle <em>Title</em>}</li>
 *   <li>{@link dk.sdu.gms.dds.deviceDefinition.impl.GraphImpl#getXlabel <em>Xlabel</em>}</li>
 *   <li>{@link dk.sdu.gms.dds.deviceDefinition.impl.GraphImpl#getYlabel <em>Ylabel</em>}</li>
 *   <li>{@link dk.sdu.gms.dds.deviceDefinition.impl.GraphImpl#getLines <em>Lines</em>}</li>
 * </ul>
 *
 * @generated
 */
public class GraphImpl extends MinimalEObjectImpl.Container implements Graph
{
  /**
   * The default value of the '{@link #getCategory() <em>Category</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCategory()
   * @generated
   * @ordered
   */
  protected static final String CATEGORY_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getCategory() <em>Category</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCategory()
   * @generated
   * @ordered
   */
  protected String category = CATEGORY_EDEFAULT;

  /**
   * The default value of the '{@link #getTitle() <em>Title</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTitle()
   * @generated
   * @ordered
   */
  protected static final String TITLE_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getTitle() <em>Title</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTitle()
   * @generated
   * @ordered
   */
  protected String title = TITLE_EDEFAULT;

  /**
   * The default value of the '{@link #getXlabel() <em>Xlabel</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getXlabel()
   * @generated
   * @ordered
   */
  protected static final String XLABEL_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getXlabel() <em>Xlabel</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getXlabel()
   * @generated
   * @ordered
   */
  protected String xlabel = XLABEL_EDEFAULT;

  /**
   * The default value of the '{@link #getYlabel() <em>Ylabel</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getYlabel()
   * @generated
   * @ordered
   */
  protected static final String YLABEL_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getYlabel() <em>Ylabel</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getYlabel()
   * @generated
   * @ordered
   */
  protected String ylabel = YLABEL_EDEFAULT;

  /**
   * The cached value of the '{@link #getLines() <em>Lines</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getLines()
   * @generated
   * @ordered
   */
  protected EList<GraphLine> lines;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected GraphImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return DeviceDefinitionPackage.Literals.GRAPH;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getCategory()
  {
    return category;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setCategory(String newCategory)
  {
    String oldCategory = category;
    category = newCategory;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DeviceDefinitionPackage.GRAPH__CATEGORY, oldCategory, category));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getTitle()
  {
    return title;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setTitle(String newTitle)
  {
    String oldTitle = title;
    title = newTitle;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DeviceDefinitionPackage.GRAPH__TITLE, oldTitle, title));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getXlabel()
  {
    return xlabel;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setXlabel(String newXlabel)
  {
    String oldXlabel = xlabel;
    xlabel = newXlabel;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DeviceDefinitionPackage.GRAPH__XLABEL, oldXlabel, xlabel));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getYlabel()
  {
    return ylabel;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setYlabel(String newYlabel)
  {
    String oldYlabel = ylabel;
    ylabel = newYlabel;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DeviceDefinitionPackage.GRAPH__YLABEL, oldYlabel, ylabel));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<GraphLine> getLines()
  {
    if (lines == null)
    {
      lines = new EObjectContainmentEList<GraphLine>(GraphLine.class, this, DeviceDefinitionPackage.GRAPH__LINES);
    }
    return lines;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case DeviceDefinitionPackage.GRAPH__LINES:
        return ((InternalEList<?>)getLines()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case DeviceDefinitionPackage.GRAPH__CATEGORY:
        return getCategory();
      case DeviceDefinitionPackage.GRAPH__TITLE:
        return getTitle();
      case DeviceDefinitionPackage.GRAPH__XLABEL:
        return getXlabel();
      case DeviceDefinitionPackage.GRAPH__YLABEL:
        return getYlabel();
      case DeviceDefinitionPackage.GRAPH__LINES:
        return getLines();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case DeviceDefinitionPackage.GRAPH__CATEGORY:
        setCategory((String)newValue);
        return;
      case DeviceDefinitionPackage.GRAPH__TITLE:
        setTitle((String)newValue);
        return;
      case DeviceDefinitionPackage.GRAPH__XLABEL:
        setXlabel((String)newValue);
        return;
      case DeviceDefinitionPackage.GRAPH__YLABEL:
        setYlabel((String)newValue);
        return;
      case DeviceDefinitionPackage.GRAPH__LINES:
        getLines().clear();
        getLines().addAll((Collection<? extends GraphLine>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case DeviceDefinitionPackage.GRAPH__CATEGORY:
        setCategory(CATEGORY_EDEFAULT);
        return;
      case DeviceDefinitionPackage.GRAPH__TITLE:
        setTitle(TITLE_EDEFAULT);
        return;
      case DeviceDefinitionPackage.GRAPH__XLABEL:
        setXlabel(XLABEL_EDEFAULT);
        return;
      case DeviceDefinitionPackage.GRAPH__YLABEL:
        setYlabel(YLABEL_EDEFAULT);
        return;
      case DeviceDefinitionPackage.GRAPH__LINES:
        getLines().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case DeviceDefinitionPackage.GRAPH__CATEGORY:
        return CATEGORY_EDEFAULT == null ? category != null : !CATEGORY_EDEFAULT.equals(category);
      case DeviceDefinitionPackage.GRAPH__TITLE:
        return TITLE_EDEFAULT == null ? title != null : !TITLE_EDEFAULT.equals(title);
      case DeviceDefinitionPackage.GRAPH__XLABEL:
        return XLABEL_EDEFAULT == null ? xlabel != null : !XLABEL_EDEFAULT.equals(xlabel);
      case DeviceDefinitionPackage.GRAPH__YLABEL:
        return YLABEL_EDEFAULT == null ? ylabel != null : !YLABEL_EDEFAULT.equals(ylabel);
      case DeviceDefinitionPackage.GRAPH__LINES:
        return lines != null && !lines.isEmpty();
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (category: ");
    result.append(category);
    result.append(", title: ");
    result.append(title);
    result.append(", xlabel: ");
    result.append(xlabel);
    result.append(", ylabel: ");
    result.append(ylabel);
    result.append(')');
    return result.toString();
  }

} //GraphImpl
