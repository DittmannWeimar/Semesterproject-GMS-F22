/**
 * generated by Xtext 2.26.0
 */
package dk.sdu.gms.dds.scoping;

import dk.sdu.gms.dds.deviceDefinition.Actuator;
import dk.sdu.gms.dds.deviceDefinition.Device;
import dk.sdu.gms.dds.deviceDefinition.ExternalVariableUse;
import dk.sdu.gms.dds.deviceDefinition.Sensor;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EReference;
import org.eclipse.xtext.scoping.IScope;
import org.eclipse.xtext.scoping.Scopes;

/**
 * This class contains custom scoping description.
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#scoping
 * on how and when to use it.
 */
@SuppressWarnings("all")
public class DeviceDefinitionScopeProvider extends AbstractDeviceDefinitionScopeProvider {
  @Override
  public IScope getScope(final EObject context, final EReference reference) {
    if (((context instanceof ExternalVariableUse) && reference.getName().equals("ref"))) {
      final Device obj = ((ExternalVariableUse) context).getObj();
      if ((obj instanceof Sensor)) {
        return Scopes.scopeFor(((Sensor) obj).getOutputs());
      }
      if ((obj instanceof Actuator)) {
        return Scopes.scopeFor(((Actuator) obj).getSettings());
      }
    }
    return super.getScope(context, reference);
  }
}
