/*
 * generated by Xtext 2.26.0
 */
grammar InternalDeviceDefinition;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package dk.sdu.gms.dds.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package dk.sdu.gms.dds.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import dk.sdu.gms.dds.services.DeviceDefinitionGrammarAccess;

}
@parser::members {
	private DeviceDefinitionGrammarAccess grammarAccess;

	public void setGrammarAccess(DeviceDefinitionGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleSystem
entryRuleSystem
:
{ before(grammarAccess.getSystemRule()); }
	 ruleSystem
{ after(grammarAccess.getSystemRule()); } 
	 EOF 
;

// Rule System
ruleSystem 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSystemAccess().getGroup()); }
		(rule__System__Group__0)
		{ after(grammarAccess.getSystemAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleGraph
entryRuleGraph
:
{ before(grammarAccess.getGraphRule()); }
	 ruleGraph
{ after(grammarAccess.getGraphRule()); } 
	 EOF 
;

// Rule Graph
ruleGraph 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getGraphAccess().getGroup()); }
		(rule__Graph__Group__0)
		{ after(grammarAccess.getGraphAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleGraphLine
entryRuleGraphLine
:
{ before(grammarAccess.getGraphLineRule()); }
	 ruleGraphLine
{ after(grammarAccess.getGraphLineRule()); } 
	 EOF 
;

// Rule GraphLine
ruleGraphLine 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getGraphLineAccess().getGroup()); }
		(rule__GraphLine__Group__0)
		{ after(grammarAccess.getGraphLineAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleColor
entryRuleColor
:
{ before(grammarAccess.getColorRule()); }
	 ruleColor
{ after(grammarAccess.getColorRule()); } 
	 EOF 
;

// Rule Color
ruleColor 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getColorAccess().getAlternatives()); }
		(rule__Color__Alternatives)
		{ after(grammarAccess.getColorAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleGateway
entryRuleGateway
:
{ before(grammarAccess.getGatewayRule()); }
	 ruleGateway
{ after(grammarAccess.getGatewayRule()); } 
	 EOF 
;

// Rule Gateway
ruleGateway 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getGatewayAccess().getGroup()); }
		(rule__Gateway__Group__0)
		{ after(grammarAccess.getGatewayAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleWorker
entryRuleWorker
:
{ before(grammarAccess.getWorkerRule()); }
	 ruleWorker
{ after(grammarAccess.getWorkerRule()); } 
	 EOF 
;

// Rule Worker
ruleWorker 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getWorkerAccess().getGroup()); }
		(rule__Worker__Group__0)
		{ after(grammarAccess.getWorkerAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDevice
entryRuleDevice
:
{ before(grammarAccess.getDeviceRule()); }
	 ruleDevice
{ after(grammarAccess.getDeviceRule()); } 
	 EOF 
;

// Rule Device
ruleDevice 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDeviceAccess().getAlternatives()); }
		(rule__Device__Alternatives)
		{ after(grammarAccess.getDeviceAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSensor
entryRuleSensor
:
{ before(grammarAccess.getSensorRule()); }
	 ruleSensor
{ after(grammarAccess.getSensorRule()); } 
	 EOF 
;

// Rule Sensor
ruleSensor 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSensorAccess().getGroup()); }
		(rule__Sensor__Group__0)
		{ after(grammarAccess.getSensorAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePin
entryRulePin
:
{ before(grammarAccess.getPinRule()); }
	 rulePin
{ after(grammarAccess.getPinRule()); } 
	 EOF 
;

// Rule Pin
rulePin 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPinAccess().getGroup()); }
		(rule__Pin__Group__0)
		{ after(grammarAccess.getPinAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePinType
entryRulePinType
:
{ before(grammarAccess.getPinTypeRule()); }
	 rulePinType
{ after(grammarAccess.getPinTypeRule()); } 
	 EOF 
;

// Rule PinType
rulePinType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPinTypeAccess().getAlternatives()); }
		(rule__PinType__Alternatives)
		{ after(grammarAccess.getPinTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTimeUnit
entryRuleTimeUnit
:
{ before(grammarAccess.getTimeUnitRule()); }
	 ruleTimeUnit
{ after(grammarAccess.getTimeUnitRule()); } 
	 EOF 
;

// Rule TimeUnit
ruleTimeUnit 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTimeUnitAccess().getAlternatives()); }
		(rule__TimeUnit__Alternatives)
		{ after(grammarAccess.getTimeUnitAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSensorOutput
entryRuleSensorOutput
:
{ before(grammarAccess.getSensorOutputRule()); }
	 ruleSensorOutput
{ after(grammarAccess.getSensorOutputRule()); } 
	 EOF 
;

// Rule SensorOutput
ruleSensorOutput 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSensorOutputAccess().getGroup()); }
		(rule__SensorOutput__Group__0)
		{ after(grammarAccess.getSensorOutputAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleActuator
entryRuleActuator
:
{ before(grammarAccess.getActuatorRule()); }
	 ruleActuator
{ after(grammarAccess.getActuatorRule()); } 
	 EOF 
;

// Rule Actuator
ruleActuator 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getActuatorAccess().getGroup()); }
		(rule__Actuator__Group__0)
		{ after(grammarAccess.getActuatorAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTrigger
entryRuleTrigger
:
{ before(grammarAccess.getTriggerRule()); }
	 ruleTrigger
{ after(grammarAccess.getTriggerRule()); } 
	 EOF 
;

// Rule Trigger
ruleTrigger 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTriggerAccess().getAlternatives()); }
		(rule__Trigger__Alternatives)
		{ after(grammarAccess.getTriggerAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSetting
entryRuleSetting
:
{ before(grammarAccess.getSettingRule()); }
	 ruleSetting
{ after(grammarAccess.getSettingRule()); } 
	 EOF 
;

// Rule Setting
ruleSetting 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSettingAccess().getGroup()); }
		(rule__Setting__Group__0)
		{ after(grammarAccess.getSettingAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePrimitive
entryRulePrimitive
:
{ before(grammarAccess.getPrimitiveRule()); }
	 rulePrimitive
{ after(grammarAccess.getPrimitiveRule()); } 
	 EOF 
;

// Rule Primitive
rulePrimitive 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPrimitiveAccess().getAlternatives()); }
		(rule__Primitive__Alternatives)
		{ after(grammarAccess.getPrimitiveAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExp
entryRuleExp
:
{ before(grammarAccess.getExpRule()); }
	 ruleExp
{ after(grammarAccess.getExpRule()); } 
	 EOF 
;

// Rule Exp
ruleExp 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpAccess().getGroup()); }
		(rule__Exp__Group__0)
		{ after(grammarAccess.getExpAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFactor
entryRuleFactor
:
{ before(grammarAccess.getFactorRule()); }
	 ruleFactor
{ after(grammarAccess.getFactorRule()); } 
	 EOF 
;

// Rule Factor
ruleFactor 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFactorAccess().getGroup()); }
		(rule__Factor__Group__0)
		{ after(grammarAccess.getFactorAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCompare
entryRuleCompare
:
{ before(grammarAccess.getCompareRule()); }
	 ruleCompare
{ after(grammarAccess.getCompareRule()); } 
	 EOF 
;

// Rule Compare
ruleCompare 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCompareAccess().getGroup()); }
		(rule__Compare__Group__0)
		{ after(grammarAccess.getCompareAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCompareOrEquals
entryRuleCompareOrEquals
:
{ before(grammarAccess.getCompareOrEqualsRule()); }
	 ruleCompareOrEquals
{ after(grammarAccess.getCompareOrEqualsRule()); } 
	 EOF 
;

// Rule CompareOrEquals
ruleCompareOrEquals 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCompareOrEqualsAccess().getGroup()); }
		(rule__CompareOrEquals__Group__0)
		{ after(grammarAccess.getCompareOrEqualsAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEqualsOrNotEquals
entryRuleEqualsOrNotEquals
:
{ before(grammarAccess.getEqualsOrNotEqualsRule()); }
	 ruleEqualsOrNotEquals
{ after(grammarAccess.getEqualsOrNotEqualsRule()); } 
	 EOF 
;

// Rule EqualsOrNotEquals
ruleEqualsOrNotEquals 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEqualsOrNotEqualsAccess().getGroup()); }
		(rule__EqualsOrNotEquals__Group__0)
		{ after(grammarAccess.getEqualsOrNotEqualsAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAndOr
entryRuleAndOr
:
{ before(grammarAccess.getAndOrRule()); }
	 ruleAndOr
{ after(grammarAccess.getAndOrRule()); } 
	 EOF 
;

// Rule AndOr
ruleAndOr 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAndOrAccess().getGroup()); }
		(rule__AndOr__Group__0)
		{ after(grammarAccess.getAndOrAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePrimary
entryRulePrimary
:
{ before(grammarAccess.getPrimaryRule()); }
	 rulePrimary
{ after(grammarAccess.getPrimaryRule()); } 
	 EOF 
;

// Rule Primary
rulePrimary 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPrimaryAccess().getAlternatives()); }
		(rule__Primary__Alternatives)
		{ after(grammarAccess.getPrimaryAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExternalCall
entryRuleExternalCall
:
{ before(grammarAccess.getExternalCallRule()); }
	 ruleExternalCall
{ after(grammarAccess.getExternalCallRule()); } 
	 EOF 
;

// Rule ExternalCall
ruleExternalCall 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExternalCallAccess().getGroup()); }
		(rule__ExternalCall__Group__0)
		{ after(grammarAccess.getExternalCallAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleInternalVariableUse
entryRuleInternalVariableUse
:
{ before(grammarAccess.getInternalVariableUseRule()); }
	 ruleInternalVariableUse
{ after(grammarAccess.getInternalVariableUseRule()); } 
	 EOF 
;

// Rule InternalVariableUse
ruleInternalVariableUse 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInternalVariableUseAccess().getRefAssignment()); }
		(rule__InternalVariableUse__RefAssignment)
		{ after(grammarAccess.getInternalVariableUseAccess().getRefAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExternalVariableUse
entryRuleExternalVariableUse
:
{ before(grammarAccess.getExternalVariableUseRule()); }
	 ruleExternalVariableUse
{ after(grammarAccess.getExternalVariableUseRule()); } 
	 EOF 
;

// Rule ExternalVariableUse
ruleExternalVariableUse 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExternalVariableUseAccess().getGroup()); }
		(rule__ExternalVariableUse__Group__0)
		{ after(grammarAccess.getExternalVariableUseAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleGraphVariableUse
entryRuleGraphVariableUse
:
{ before(grammarAccess.getGraphVariableUseRule()); }
	 ruleGraphVariableUse
{ after(grammarAccess.getGraphVariableUseRule()); } 
	 EOF 
;

// Rule GraphVariableUse
ruleGraphVariableUse 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getGraphVariableUseAccess().getGroup()); }
		(rule__GraphVariableUse__Group__0)
		{ after(grammarAccess.getGraphVariableUseAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVariableUse
entryRuleVariableUse
:
{ before(grammarAccess.getVariableUseRule()); }
	 ruleVariableUse
{ after(grammarAccess.getVariableUseRule()); } 
	 EOF 
;

// Rule VariableUse
ruleVariableUse 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVariableUseAccess().getAlternatives()); }
		(rule__VariableUse__Alternatives)
		{ after(grammarAccess.getVariableUseAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleParenthesis
entryRuleParenthesis
:
{ before(grammarAccess.getParenthesisRule()); }
	 ruleParenthesis
{ after(grammarAccess.getParenthesisRule()); } 
	 EOF 
;

// Rule Parenthesis
ruleParenthesis 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getParenthesisAccess().getGroup()); }
		(rule__Parenthesis__Group__0)
		{ after(grammarAccess.getParenthesisAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule ColorPreset
ruleColorPreset
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getColorPresetAccess().getAlternatives()); }
		(rule__ColorPreset__Alternatives)
		{ after(grammarAccess.getColorPresetAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Color__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getColorAccess().getGroup_0()); }
		(rule__Color__Group_0__0)
		{ after(grammarAccess.getColorAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getColorAccess().getGroup_1()); }
		(rule__Color__Group_1__0)
		{ after(grammarAccess.getColorAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getColorAccess().getGroup_2()); }
		(rule__Color__Group_2__0)
		{ after(grammarAccess.getColorAccess().getGroup_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Device__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDeviceAccess().getSensorParserRuleCall_0()); }
		ruleSensor
		{ after(grammarAccess.getDeviceAccess().getSensorParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getDeviceAccess().getActuatorParserRuleCall_1()); }
		ruleActuator
		{ after(grammarAccess.getDeviceAccess().getActuatorParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PinType__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPinTypeAccess().getGroup_0()); }
		(rule__PinType__Group_0__0)
		{ after(grammarAccess.getPinTypeAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getPinTypeAccess().getGroup_1()); }
		(rule__PinType__Group_1__0)
		{ after(grammarAccess.getPinTypeAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getPinTypeAccess().getGroup_2()); }
		(rule__PinType__Group_2__0)
		{ after(grammarAccess.getPinTypeAccess().getGroup_2()); }
	)
	|
	(
		{ before(grammarAccess.getPinTypeAccess().getGroup_3()); }
		(rule__PinType__Group_3__0)
		{ after(grammarAccess.getPinTypeAccess().getGroup_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeUnit__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTimeUnitAccess().getGroup_0()); }
		(rule__TimeUnit__Group_0__0)
		{ after(grammarAccess.getTimeUnitAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getTimeUnitAccess().getGroup_1()); }
		(rule__TimeUnit__Group_1__0)
		{ after(grammarAccess.getTimeUnitAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getTimeUnitAccess().getGroup_2()); }
		(rule__TimeUnit__Group_2__0)
		{ after(grammarAccess.getTimeUnitAccess().getGroup_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeUnit__Alternatives_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTimeUnitAccess().getSecondKeyword_0_1_0()); }
		'second'
		{ after(grammarAccess.getTimeUnitAccess().getSecondKeyword_0_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getTimeUnitAccess().getSecondsKeyword_0_1_1()); }
		'seconds'
		{ after(grammarAccess.getTimeUnitAccess().getSecondsKeyword_0_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeUnit__Alternatives_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTimeUnitAccess().getMinuteKeyword_1_1_0()); }
		'minute'
		{ after(grammarAccess.getTimeUnitAccess().getMinuteKeyword_1_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getTimeUnitAccess().getMinutesKeyword_1_1_1()); }
		'minutes'
		{ after(grammarAccess.getTimeUnitAccess().getMinutesKeyword_1_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeUnit__Alternatives_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTimeUnitAccess().getHourKeyword_2_1_0()); }
		'hour'
		{ after(grammarAccess.getTimeUnitAccess().getHourKeyword_2_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getTimeUnitAccess().getHoursKeyword_2_1_1()); }
		'hours'
		{ after(grammarAccess.getTimeUnitAccess().getHoursKeyword_2_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Trigger__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTriggerAccess().getGroup_0()); }
		(rule__Trigger__Group_0__0)
		{ after(grammarAccess.getTriggerAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getTriggerAccess().getGroup_1()); }
		(rule__Trigger__Group_1__0)
		{ after(grammarAccess.getTriggerAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Trigger__Alternatives_1_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTriggerAccess().getGroup_1_3_0()); }
		(rule__Trigger__Group_1_3_0__0)
		{ after(grammarAccess.getTriggerAccess().getGroup_1_3_0()); }
	)
	|
	(
		{ before(grammarAccess.getTriggerAccess().getGroup_1_3_1()); }
		(rule__Trigger__Group_1_3_1__0)
		{ after(grammarAccess.getTriggerAccess().getGroup_1_3_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primitive__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimitiveAccess().getGroup_0()); }
		(rule__Primitive__Group_0__0)
		{ after(grammarAccess.getPrimitiveAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getPrimitiveAccess().getGroup_1()); }
		(rule__Primitive__Group_1__0)
		{ after(grammarAccess.getPrimitiveAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getPrimitiveAccess().getGroup_2()); }
		(rule__Primitive__Group_2__0)
		{ after(grammarAccess.getPrimitiveAccess().getGroup_2()); }
	)
	|
	(
		{ before(grammarAccess.getPrimitiveAccess().getGroup_3()); }
		(rule__Primitive__Group_3__0)
		{ after(grammarAccess.getPrimitiveAccess().getGroup_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Exp__Alternatives_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpAccess().getGroup_1_0_0()); }
		(rule__Exp__Group_1_0_0__0)
		{ after(grammarAccess.getExpAccess().getGroup_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getExpAccess().getGroup_1_0_1()); }
		(rule__Exp__Group_1_0_1__0)
		{ after(grammarAccess.getExpAccess().getGroup_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__Alternatives_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFactorAccess().getGroup_1_0_0()); }
		(rule__Factor__Group_1_0_0__0)
		{ after(grammarAccess.getFactorAccess().getGroup_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getFactorAccess().getGroup_1_0_1()); }
		(rule__Factor__Group_1_0_1__0)
		{ after(grammarAccess.getFactorAccess().getGroup_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Compare__Alternatives_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCompareAccess().getGroup_1_0_0()); }
		(rule__Compare__Group_1_0_0__0)
		{ after(grammarAccess.getCompareAccess().getGroup_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getCompareAccess().getGroup_1_0_1()); }
		(rule__Compare__Group_1_0_1__0)
		{ after(grammarAccess.getCompareAccess().getGroup_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompareOrEquals__Alternatives_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCompareOrEqualsAccess().getGroup_1_0_0()); }
		(rule__CompareOrEquals__Group_1_0_0__0)
		{ after(grammarAccess.getCompareOrEqualsAccess().getGroup_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getCompareOrEqualsAccess().getGroup_1_0_1()); }
		(rule__CompareOrEquals__Group_1_0_1__0)
		{ after(grammarAccess.getCompareOrEqualsAccess().getGroup_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualsOrNotEquals__Alternatives_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEqualsOrNotEqualsAccess().getGroup_1_0_0()); }
		(rule__EqualsOrNotEquals__Group_1_0_0__0)
		{ after(grammarAccess.getEqualsOrNotEqualsAccess().getGroup_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getEqualsOrNotEqualsAccess().getGroup_1_0_1()); }
		(rule__EqualsOrNotEquals__Group_1_0_1__0)
		{ after(grammarAccess.getEqualsOrNotEqualsAccess().getGroup_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AndOr__Alternatives_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAndOrAccess().getGroup_1_0_0()); }
		(rule__AndOr__Group_1_0_0__0)
		{ after(grammarAccess.getAndOrAccess().getGroup_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getAndOrAccess().getGroup_1_0_1()); }
		(rule__AndOr__Group_1_0_1__0)
		{ after(grammarAccess.getAndOrAccess().getGroup_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryAccess().getPrimitiveParserRuleCall_0()); }
		rulePrimitive
		{ after(grammarAccess.getPrimaryAccess().getPrimitiveParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryAccess().getParenthesisParserRuleCall_1()); }
		ruleParenthesis
		{ after(grammarAccess.getPrimaryAccess().getParenthesisParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryAccess().getVariableUseParserRuleCall_2()); }
		ruleVariableUse
		{ after(grammarAccess.getPrimaryAccess().getVariableUseParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryAccess().getExternalCallParserRuleCall_3()); }
		ruleExternalCall
		{ after(grammarAccess.getPrimaryAccess().getExternalCallParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryAccess().getGroup_4()); }
		(rule__Primary__Group_4__0)
		{ after(grammarAccess.getPrimaryAccess().getGroup_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalVariableUse__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExternalVariableUseAccess().getFullStopKeyword_1_0()); }
		'.'
		{ after(grammarAccess.getExternalVariableUseAccess().getFullStopKeyword_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getExternalVariableUseAccess().getHyphenMinusGreaterThanSignKeyword_1_1()); }
		'->'
		{ after(grammarAccess.getExternalVariableUseAccess().getHyphenMinusGreaterThanSignKeyword_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphVariableUse__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGraphVariableUseAccess().getFullStopKeyword_1_0()); }
		'.'
		{ after(grammarAccess.getGraphVariableUseAccess().getFullStopKeyword_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getGraphVariableUseAccess().getHyphenMinusGreaterThanSignKeyword_1_1()); }
		'->'
		{ after(grammarAccess.getGraphVariableUseAccess().getHyphenMinusGreaterThanSignKeyword_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphVariableUse__Alternatives_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGraphVariableUseAccess().getFullStopKeyword_3_0()); }
		'.'
		{ after(grammarAccess.getGraphVariableUseAccess().getFullStopKeyword_3_0()); }
	)
	|
	(
		{ before(grammarAccess.getGraphVariableUseAccess().getHyphenMinusGreaterThanSignKeyword_3_1()); }
		'->'
		{ after(grammarAccess.getGraphVariableUseAccess().getHyphenMinusGreaterThanSignKeyword_3_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableUse__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableUseAccess().getInternalVariableUseParserRuleCall_0()); }
		ruleInternalVariableUse
		{ after(grammarAccess.getVariableUseAccess().getInternalVariableUseParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getVariableUseAccess().getExternalVariableUseParserRuleCall_1()); }
		ruleExternalVariableUse
		{ after(grammarAccess.getVariableUseAccess().getExternalVariableUseParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getVariableUseAccess().getGraphVariableUseParserRuleCall_2()); }
		ruleGraphVariableUse
		{ after(grammarAccess.getVariableUseAccess().getGraphVariableUseParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ColorPreset__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getColorPresetAccess().getRedEnumLiteralDeclaration_0()); }
		('red')
		{ after(grammarAccess.getColorPresetAccess().getRedEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getColorPresetAccess().getGreenEnumLiteralDeclaration_1()); }
		('green')
		{ after(grammarAccess.getColorPresetAccess().getGreenEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getColorPresetAccess().getBlueEnumLiteralDeclaration_2()); }
		('blue')
		{ after(grammarAccess.getColorPresetAccess().getBlueEnumLiteralDeclaration_2()); }
	)
	|
	(
		{ before(grammarAccess.getColorPresetAccess().getYellowEnumLiteralDeclaration_3()); }
		('yellow')
		{ after(grammarAccess.getColorPresetAccess().getYellowEnumLiteralDeclaration_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__System__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__System__Group__0__Impl
	rule__System__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__System__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSystemAccess().getSystemKeyword_0()); }
	'System'
	{ after(grammarAccess.getSystemAccess().getSystemKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__System__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__System__Group__1__Impl
	rule__System__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__System__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSystemAccess().getColonKeyword_1()); }
	':'
	{ after(grammarAccess.getSystemAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__System__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__System__Group__2__Impl
	rule__System__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__System__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSystemAccess().getWifiKeyword_2()); }
	'wifi'
	{ after(grammarAccess.getSystemAccess().getWifiKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__System__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__System__Group__3__Impl
	rule__System__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__System__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSystemAccess().getWifiSsidAssignment_3()); }
	(rule__System__WifiSsidAssignment_3)
	{ after(grammarAccess.getSystemAccess().getWifiSsidAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__System__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__System__Group__4__Impl
	rule__System__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__System__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSystemAccess().getGroup_4()); }
	(rule__System__Group_4__0)?
	{ after(grammarAccess.getSystemAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__System__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__System__Group__5__Impl
	rule__System__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__System__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSystemAccess().getMqttKeyword_5()); }
	'mqtt'
	{ after(grammarAccess.getSystemAccess().getMqttKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__System__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__System__Group__6__Impl
	rule__System__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__System__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSystemAccess().getMqttHostAssignment_6()); }
	(rule__System__MqttHostAssignment_6)
	{ after(grammarAccess.getSystemAccess().getMqttHostAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__System__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__System__Group__7__Impl
	rule__System__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__System__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSystemAccess().getGroup_7()); }
	(rule__System__Group_7__0)?
	{ after(grammarAccess.getSystemAccess().getGroup_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__System__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__System__Group__8__Impl
	rule__System__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__System__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSystemAccess().getGatewayAssignment_8()); }
	(rule__System__GatewayAssignment_8)
	{ after(grammarAccess.getSystemAccess().getGatewayAssignment_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__System__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__System__Group__9__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__System__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSystemAccess().getGraphsAssignment_9()); }
	(rule__System__GraphsAssignment_9)*
	{ after(grammarAccess.getSystemAccess().getGraphsAssignment_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__System__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__System__Group_4__0__Impl
	rule__System__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__System__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSystemAccess().getWithKeyword_4_0()); }
	'with'
	{ after(grammarAccess.getSystemAccess().getWithKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__System__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__System__Group_4__1__Impl
	rule__System__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__System__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSystemAccess().getPasswordKeyword_4_1()); }
	'password'
	{ after(grammarAccess.getSystemAccess().getPasswordKeyword_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__System__Group_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__System__Group_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__System__Group_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSystemAccess().getWifiPasswordAssignment_4_2()); }
	(rule__System__WifiPasswordAssignment_4_2)
	{ after(grammarAccess.getSystemAccess().getWifiPasswordAssignment_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__System__Group_7__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__System__Group_7__0__Impl
	rule__System__Group_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__System__Group_7__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSystemAccess().getWithKeyword_7_0()); }
	'with'
	{ after(grammarAccess.getSystemAccess().getWithKeyword_7_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__System__Group_7__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__System__Group_7__1__Impl
	rule__System__Group_7__2
;
finally {
	restoreStackSize(stackSize);
}

rule__System__Group_7__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSystemAccess().getUsernameKeyword_7_1()); }
	'username'
	{ after(grammarAccess.getSystemAccess().getUsernameKeyword_7_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__System__Group_7__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__System__Group_7__2__Impl
	rule__System__Group_7__3
;
finally {
	restoreStackSize(stackSize);
}

rule__System__Group_7__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSystemAccess().getMqttUsernameAssignment_7_2()); }
	(rule__System__MqttUsernameAssignment_7_2)
	{ after(grammarAccess.getSystemAccess().getMqttUsernameAssignment_7_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__System__Group_7__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__System__Group_7__3__Impl
	rule__System__Group_7__4
;
finally {
	restoreStackSize(stackSize);
}

rule__System__Group_7__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSystemAccess().getAndKeyword_7_3()); }
	'and'
	{ after(grammarAccess.getSystemAccess().getAndKeyword_7_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__System__Group_7__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__System__Group_7__4__Impl
	rule__System__Group_7__5
;
finally {
	restoreStackSize(stackSize);
}

rule__System__Group_7__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSystemAccess().getPasswordKeyword_7_4()); }
	'password'
	{ after(grammarAccess.getSystemAccess().getPasswordKeyword_7_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__System__Group_7__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__System__Group_7__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__System__Group_7__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSystemAccess().getMqttPasswordAssignment_7_5()); }
	(rule__System__MqttPasswordAssignment_7_5)
	{ after(grammarAccess.getSystemAccess().getMqttPasswordAssignment_7_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Graph__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Graph__Group__0__Impl
	rule__Graph__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Graph__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGraphAccess().getGraphKeyword_0()); }
	'Graph'
	{ after(grammarAccess.getGraphAccess().getGraphKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Graph__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Graph__Group__1__Impl
	rule__Graph__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Graph__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGraphAccess().getColonKeyword_1()); }
	':'
	{ after(grammarAccess.getGraphAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Graph__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Graph__Group__2__Impl
	rule__Graph__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Graph__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGraphAccess().getCategoryKeyword_2()); }
	'category'
	{ after(grammarAccess.getGraphAccess().getCategoryKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Graph__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Graph__Group__3__Impl
	rule__Graph__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Graph__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGraphAccess().getCategoryAssignment_3()); }
	(rule__Graph__CategoryAssignment_3)
	{ after(grammarAccess.getGraphAccess().getCategoryAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Graph__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Graph__Group__4__Impl
	rule__Graph__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Graph__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGraphAccess().getTitleKeyword_4()); }
	'title'
	{ after(grammarAccess.getGraphAccess().getTitleKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Graph__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Graph__Group__5__Impl
	rule__Graph__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Graph__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGraphAccess().getTitleAssignment_5()); }
	(rule__Graph__TitleAssignment_5)
	{ after(grammarAccess.getGraphAccess().getTitleAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Graph__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Graph__Group__6__Impl
	rule__Graph__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Graph__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGraphAccess().getXKeyword_6()); }
	'x'
	{ after(grammarAccess.getGraphAccess().getXKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Graph__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Graph__Group__7__Impl
	rule__Graph__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Graph__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGraphAccess().getXlabelAssignment_7()); }
	(rule__Graph__XlabelAssignment_7)
	{ after(grammarAccess.getGraphAccess().getXlabelAssignment_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Graph__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Graph__Group__8__Impl
	rule__Graph__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Graph__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGraphAccess().getYKeyword_8()); }
	'y'
	{ after(grammarAccess.getGraphAccess().getYKeyword_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Graph__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Graph__Group__9__Impl
	rule__Graph__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__Graph__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGraphAccess().getYlabelAssignment_9()); }
	(rule__Graph__YlabelAssignment_9)
	{ after(grammarAccess.getGraphAccess().getYlabelAssignment_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Graph__Group__10
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Graph__Group__10__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Graph__Group__10__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getGraphAccess().getLinesAssignment_10()); }
		(rule__Graph__LinesAssignment_10)
		{ after(grammarAccess.getGraphAccess().getLinesAssignment_10()); }
	)
	(
		{ before(grammarAccess.getGraphAccess().getLinesAssignment_10()); }
		(rule__Graph__LinesAssignment_10)*
		{ after(grammarAccess.getGraphAccess().getLinesAssignment_10()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}


rule__GraphLine__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GraphLine__Group__0__Impl
	rule__GraphLine__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphLine__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGraphLineAccess().getLineKeyword_0()); }
	'line'
	{ after(grammarAccess.getGraphLineAccess().getLineKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphLine__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GraphLine__Group__1__Impl
	rule__GraphLine__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphLine__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGraphLineAccess().getOutputAssignment_1()); }
	(rule__GraphLine__OutputAssignment_1)
	{ after(grammarAccess.getGraphLineAccess().getOutputAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphLine__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GraphLine__Group__2__Impl
	rule__GraphLine__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphLine__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGraphLineAccess().getGroup_2()); }
	(rule__GraphLine__Group_2__0)?
	{ after(grammarAccess.getGraphLineAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphLine__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GraphLine__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphLine__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGraphLineAccess().getGroup_3()); }
	(rule__GraphLine__Group_3__0)?
	{ after(grammarAccess.getGraphLineAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__GraphLine__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GraphLine__Group_2__0__Impl
	rule__GraphLine__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphLine__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGraphLineAccess().getLegendKeyword_2_0()); }
	'legend'
	{ after(grammarAccess.getGraphLineAccess().getLegendKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphLine__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GraphLine__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphLine__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGraphLineAccess().getLegendAssignment_2_1()); }
	(rule__GraphLine__LegendAssignment_2_1)
	{ after(grammarAccess.getGraphLineAccess().getLegendAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__GraphLine__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GraphLine__Group_3__0__Impl
	rule__GraphLine__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphLine__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGraphLineAccess().getColorKeyword_3_0()); }
	'color'
	{ after(grammarAccess.getGraphLineAccess().getColorKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphLine__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GraphLine__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphLine__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGraphLineAccess().getColorAssignment_3_1()); }
	(rule__GraphLine__ColorAssignment_3_1)
	{ after(grammarAccess.getGraphLineAccess().getColorAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Color__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Color__Group_0__0__Impl
	rule__Color__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Color__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColorAccess().getRGBAction_0_0()); }
	()
	{ after(grammarAccess.getColorAccess().getRGBAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Color__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Color__Group_0__1__Impl
	rule__Color__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Color__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColorAccess().getLeftParenthesisKeyword_0_1()); }
	'('
	{ after(grammarAccess.getColorAccess().getLeftParenthesisKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Color__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Color__Group_0__2__Impl
	rule__Color__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Color__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColorAccess().getRedAssignment_0_2()); }
	(rule__Color__RedAssignment_0_2)
	{ after(grammarAccess.getColorAccess().getRedAssignment_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Color__Group_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Color__Group_0__3__Impl
	rule__Color__Group_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Color__Group_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColorAccess().getCommaKeyword_0_3()); }
	','
	{ after(grammarAccess.getColorAccess().getCommaKeyword_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Color__Group_0__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Color__Group_0__4__Impl
	rule__Color__Group_0__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Color__Group_0__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColorAccess().getGreenAssignment_0_4()); }
	(rule__Color__GreenAssignment_0_4)
	{ after(grammarAccess.getColorAccess().getGreenAssignment_0_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Color__Group_0__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Color__Group_0__5__Impl
	rule__Color__Group_0__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Color__Group_0__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColorAccess().getCommaKeyword_0_5()); }
	','
	{ after(grammarAccess.getColorAccess().getCommaKeyword_0_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Color__Group_0__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Color__Group_0__6__Impl
	rule__Color__Group_0__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Color__Group_0__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColorAccess().getBlueAssignment_0_6()); }
	(rule__Color__BlueAssignment_0_6)
	{ after(grammarAccess.getColorAccess().getBlueAssignment_0_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Color__Group_0__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Color__Group_0__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Color__Group_0__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColorAccess().getRightParenthesisKeyword_0_7()); }
	')'
	{ after(grammarAccess.getColorAccess().getRightParenthesisKeyword_0_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Color__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Color__Group_1__0__Impl
	rule__Color__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Color__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColorAccess().getPresetAction_1_0()); }
	()
	{ after(grammarAccess.getColorAccess().getPresetAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Color__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Color__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Color__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColorAccess().getPresetAssignment_1_1()); }
	(rule__Color__PresetAssignment_1_1)
	{ after(grammarAccess.getColorAccess().getPresetAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Color__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Color__Group_2__0__Impl
	rule__Color__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Color__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColorAccess().getRandomAction_2_0()); }
	()
	{ after(grammarAccess.getColorAccess().getRandomAction_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Color__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Color__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Color__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColorAccess().getRandomKeyword_2_1()); }
	'random'
	{ after(grammarAccess.getColorAccess().getRandomKeyword_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Gateway__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Gateway__Group__0__Impl
	rule__Gateway__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Gateway__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGatewayAccess().getGatewayKeyword_0()); }
	'Gateway'
	{ after(grammarAccess.getGatewayAccess().getGatewayKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Gateway__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Gateway__Group__1__Impl
	rule__Gateway__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Gateway__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGatewayAccess().getNameAssignment_1()); }
	(rule__Gateway__NameAssignment_1)
	{ after(grammarAccess.getGatewayAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Gateway__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Gateway__Group__2__Impl
	rule__Gateway__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Gateway__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGatewayAccess().getColonKeyword_2()); }
	':'
	{ after(grammarAccess.getGatewayAccess().getColonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Gateway__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Gateway__Group__3__Impl
	rule__Gateway__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Gateway__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGatewayAccess().getMacKeyword_3()); }
	'mac'
	{ after(grammarAccess.getGatewayAccess().getMacKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Gateway__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Gateway__Group__4__Impl
	rule__Gateway__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Gateway__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGatewayAccess().getMacAssignment_4()); }
	(rule__Gateway__MacAssignment_4)
	{ after(grammarAccess.getGatewayAccess().getMacAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Gateway__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Gateway__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Gateway__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getGatewayAccess().getWorkersAssignment_5()); }
		(rule__Gateway__WorkersAssignment_5)
		{ after(grammarAccess.getGatewayAccess().getWorkersAssignment_5()); }
	)
	(
		{ before(grammarAccess.getGatewayAccess().getWorkersAssignment_5()); }
		(rule__Gateway__WorkersAssignment_5)*
		{ after(grammarAccess.getGatewayAccess().getWorkersAssignment_5()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Worker__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Worker__Group__0__Impl
	rule__Worker__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Worker__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWorkerAccess().getWorkerKeyword_0()); }
	'Worker'
	{ after(grammarAccess.getWorkerAccess().getWorkerKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Worker__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Worker__Group__1__Impl
	rule__Worker__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Worker__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWorkerAccess().getNameAssignment_1()); }
	(rule__Worker__NameAssignment_1)
	{ after(grammarAccess.getWorkerAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Worker__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Worker__Group__2__Impl
	rule__Worker__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Worker__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWorkerAccess().getColonKeyword_2()); }
	':'
	{ after(grammarAccess.getWorkerAccess().getColonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Worker__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Worker__Group__3__Impl
	rule__Worker__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Worker__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWorkerAccess().getGroup_3()); }
	(rule__Worker__Group_3__0)
	{ after(grammarAccess.getWorkerAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Worker__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Worker__Group__4__Impl
	rule__Worker__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Worker__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWorkerAccess().getGroup_4()); }
	(rule__Worker__Group_4__0)?
	{ after(grammarAccess.getWorkerAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Worker__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Worker__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Worker__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWorkerAccess().getDevicesAssignment_5()); }
	(rule__Worker__DevicesAssignment_5)*
	{ after(grammarAccess.getWorkerAccess().getDevicesAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Worker__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Worker__Group_3__0__Impl
	rule__Worker__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Worker__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWorkerAccess().getMacKeyword_3_0()); }
	'mac'
	{ after(grammarAccess.getWorkerAccess().getMacKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Worker__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Worker__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Worker__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWorkerAccess().getMacAssignment_3_1()); }
	(rule__Worker__MacAssignment_3_1)
	{ after(grammarAccess.getWorkerAccess().getMacAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Worker__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Worker__Group_4__0__Impl
	rule__Worker__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Worker__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWorkerAccess().getSleepKeyword_4_0()); }
	'sleep'
	{ after(grammarAccess.getWorkerAccess().getSleepKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Worker__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Worker__Group_4__1__Impl
	rule__Worker__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Worker__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWorkerAccess().getForKeyword_4_1()); }
	'for'
	{ after(grammarAccess.getWorkerAccess().getForKeyword_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Worker__Group_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Worker__Group_4__2__Impl
	rule__Worker__Group_4__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Worker__Group_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWorkerAccess().getSleepTimeAssignment_4_2()); }
	(rule__Worker__SleepTimeAssignment_4_2)
	{ after(grammarAccess.getWorkerAccess().getSleepTimeAssignment_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Worker__Group_4__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Worker__Group_4__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Worker__Group_4__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWorkerAccess().getTimeUnitAssignment_4_3()); }
	(rule__Worker__TimeUnitAssignment_4_3)
	{ after(grammarAccess.getWorkerAccess().getTimeUnitAssignment_4_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Sensor__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sensor__Group__0__Impl
	rule__Sensor__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Sensor__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSensorAccess().getSensorKeyword_0()); }
	'Sensor'
	{ after(grammarAccess.getSensorAccess().getSensorKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sensor__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sensor__Group__1__Impl
	rule__Sensor__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Sensor__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSensorAccess().getTypeAssignment_1()); }
	(rule__Sensor__TypeAssignment_1)
	{ after(grammarAccess.getSensorAccess().getTypeAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sensor__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sensor__Group__2__Impl
	rule__Sensor__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Sensor__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSensorAccess().getNameAssignment_2()); }
	(rule__Sensor__NameAssignment_2)
	{ after(grammarAccess.getSensorAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sensor__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sensor__Group__3__Impl
	rule__Sensor__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Sensor__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSensorAccess().getColonKeyword_3()); }
	':'
	{ after(grammarAccess.getSensorAccess().getColonKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sensor__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sensor__Group__4__Impl
	rule__Sensor__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Sensor__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSensorAccess().getGroup_4()); }
	(rule__Sensor__Group_4__0)?
	{ after(grammarAccess.getSensorAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sensor__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sensor__Group__5__Impl
	rule__Sensor__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Sensor__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSensorAccess().getOutputsAssignment_5()); }
	(rule__Sensor__OutputsAssignment_5)*
	{ after(grammarAccess.getSensorAccess().getOutputsAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sensor__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sensor__Group__6__Impl
	rule__Sensor__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Sensor__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSensorAccess().getSettingsAssignment_6()); }
	(rule__Sensor__SettingsAssignment_6)*
	{ after(grammarAccess.getSensorAccess().getSettingsAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sensor__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sensor__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Sensor__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSensorAccess().getGroup_7()); }
	(rule__Sensor__Group_7__0)?
	{ after(grammarAccess.getSensorAccess().getGroup_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Sensor__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sensor__Group_4__0__Impl
	rule__Sensor__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Sensor__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSensorAccess().getPinsKeyword_4_0()); }
	'pins'
	{ after(grammarAccess.getSensorAccess().getPinsKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sensor__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sensor__Group_4__1__Impl
	rule__Sensor__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Sensor__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSensorAccess().getPinsAssignment_4_1()); }
	(rule__Sensor__PinsAssignment_4_1)*
	{ after(grammarAccess.getSensorAccess().getPinsAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sensor__Group_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sensor__Group_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Sensor__Group_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSensorAccess().getGroup_4_2()); }
	(rule__Sensor__Group_4_2__0)*
	{ after(grammarAccess.getSensorAccess().getGroup_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Sensor__Group_4_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sensor__Group_4_2__0__Impl
	rule__Sensor__Group_4_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Sensor__Group_4_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSensorAccess().getCommaKeyword_4_2_0()); }
	','
	{ after(grammarAccess.getSensorAccess().getCommaKeyword_4_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sensor__Group_4_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sensor__Group_4_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Sensor__Group_4_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSensorAccess().getPinsAssignment_4_2_1()); }
	(rule__Sensor__PinsAssignment_4_2_1)
	{ after(grammarAccess.getSensorAccess().getPinsAssignment_4_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Sensor__Group_7__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sensor__Group_7__0__Impl
	rule__Sensor__Group_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Sensor__Group_7__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSensorAccess().getSampleKeyword_7_0()); }
	'sample'
	{ after(grammarAccess.getSensorAccess().getSampleKeyword_7_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sensor__Group_7__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sensor__Group_7__1__Impl
	rule__Sensor__Group_7__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Sensor__Group_7__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSensorAccess().getIfKeyword_7_1()); }
	'if'
	{ after(grammarAccess.getSensorAccess().getIfKeyword_7_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sensor__Group_7__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sensor__Group_7__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Sensor__Group_7__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSensorAccess().getPredicateAssignment_7_2()); }
	(rule__Sensor__PredicateAssignment_7_2)
	{ after(grammarAccess.getSensorAccess().getPredicateAssignment_7_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Pin__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Pin__Group__0__Impl
	rule__Pin__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Pin__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPinAccess().getTypeAssignment_0()); }
	(rule__Pin__TypeAssignment_0)
	{ after(grammarAccess.getPinAccess().getTypeAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Pin__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Pin__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Pin__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPinAccess().getNumberAssignment_1()); }
	(rule__Pin__NumberAssignment_1)
	{ after(grammarAccess.getPinAccess().getNumberAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PinType__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PinType__Group_0__0__Impl
	rule__PinType__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PinType__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPinTypeAccess().getADCAction_0_0()); }
	()
	{ after(grammarAccess.getPinTypeAccess().getADCAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PinType__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PinType__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PinType__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPinTypeAccess().getAdcKeyword_0_1()); }
	'adc'
	{ after(grammarAccess.getPinTypeAccess().getAdcKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PinType__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PinType__Group_1__0__Impl
	rule__PinType__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PinType__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPinTypeAccess().getDACAction_1_0()); }
	()
	{ after(grammarAccess.getPinTypeAccess().getDACAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PinType__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PinType__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PinType__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPinTypeAccess().getDacKeyword_1_1()); }
	'dac'
	{ after(grammarAccess.getPinTypeAccess().getDacKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PinType__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PinType__Group_2__0__Impl
	rule__PinType__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PinType__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPinTypeAccess().getGenericInAction_2_0()); }
	()
	{ after(grammarAccess.getPinTypeAccess().getGenericInAction_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PinType__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PinType__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PinType__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPinTypeAccess().getInKeyword_2_1()); }
	'in'
	{ after(grammarAccess.getPinTypeAccess().getInKeyword_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PinType__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PinType__Group_3__0__Impl
	rule__PinType__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PinType__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPinTypeAccess().getGenericOutAction_3_0()); }
	()
	{ after(grammarAccess.getPinTypeAccess().getGenericOutAction_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PinType__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PinType__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PinType__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPinTypeAccess().getOutKeyword_3_1()); }
	'out'
	{ after(grammarAccess.getPinTypeAccess().getOutKeyword_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TimeUnit__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TimeUnit__Group_0__0__Impl
	rule__TimeUnit__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeUnit__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimeUnitAccess().getSecondAction_0_0()); }
	()
	{ after(grammarAccess.getTimeUnitAccess().getSecondAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeUnit__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TimeUnit__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeUnit__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimeUnitAccess().getAlternatives_0_1()); }
	(rule__TimeUnit__Alternatives_0_1)
	{ after(grammarAccess.getTimeUnitAccess().getAlternatives_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TimeUnit__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TimeUnit__Group_1__0__Impl
	rule__TimeUnit__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeUnit__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimeUnitAccess().getMinuteAction_1_0()); }
	()
	{ after(grammarAccess.getTimeUnitAccess().getMinuteAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeUnit__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TimeUnit__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeUnit__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimeUnitAccess().getAlternatives_1_1()); }
	(rule__TimeUnit__Alternatives_1_1)
	{ after(grammarAccess.getTimeUnitAccess().getAlternatives_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TimeUnit__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TimeUnit__Group_2__0__Impl
	rule__TimeUnit__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeUnit__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimeUnitAccess().getHourAction_2_0()); }
	()
	{ after(grammarAccess.getTimeUnitAccess().getHourAction_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeUnit__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TimeUnit__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeUnit__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimeUnitAccess().getAlternatives_2_1()); }
	(rule__TimeUnit__Alternatives_2_1)
	{ after(grammarAccess.getTimeUnitAccess().getAlternatives_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SensorOutput__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SensorOutput__Group__0__Impl
	rule__SensorOutput__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SensorOutput__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSensorOutputAccess().getOutKeyword_0()); }
	'out'
	{ after(grammarAccess.getSensorOutputAccess().getOutKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SensorOutput__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SensorOutput__Group__1__Impl
	rule__SensorOutput__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SensorOutput__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSensorOutputAccess().getOutputAssignment_1()); }
	(rule__SensorOutput__OutputAssignment_1)?
	{ after(grammarAccess.getSensorOutputAccess().getOutputAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SensorOutput__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SensorOutput__Group__2__Impl
	rule__SensorOutput__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SensorOutput__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSensorOutputAccess().getAsKeyword_2()); }
	'as'
	{ after(grammarAccess.getSensorOutputAccess().getAsKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SensorOutput__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SensorOutput__Group__3__Impl
	rule__SensorOutput__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__SensorOutput__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSensorOutputAccess().getNameAssignment_3()); }
	(rule__SensorOutput__NameAssignment_3)
	{ after(grammarAccess.getSensorOutputAccess().getNameAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SensorOutput__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SensorOutput__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SensorOutput__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSensorOutputAccess().getGroup_4()); }
	(rule__SensorOutput__Group_4__0)?
	{ after(grammarAccess.getSensorOutputAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SensorOutput__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SensorOutput__Group_4__0__Impl
	rule__SensorOutput__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SensorOutput__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSensorOutputAccess().getWithKeyword_4_0()); }
	'with'
	{ after(grammarAccess.getSensorOutputAccess().getWithKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SensorOutput__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SensorOutput__Group_4__1__Impl
	rule__SensorOutput__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SensorOutput__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSensorOutputAccess().getMappingKeyword_4_1()); }
	'mapping'
	{ after(grammarAccess.getSensorOutputAccess().getMappingKeyword_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SensorOutput__Group_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SensorOutput__Group_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SensorOutput__Group_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSensorOutputAccess().getMappingAssignment_4_2()); }
	(rule__SensorOutput__MappingAssignment_4_2)
	{ after(grammarAccess.getSensorOutputAccess().getMappingAssignment_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Actuator__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Actuator__Group__0__Impl
	rule__Actuator__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Actuator__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActuatorAccess().getActuatorKeyword_0()); }
	'Actuator'
	{ after(grammarAccess.getActuatorAccess().getActuatorKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Actuator__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Actuator__Group__1__Impl
	rule__Actuator__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Actuator__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActuatorAccess().getTypeAssignment_1()); }
	(rule__Actuator__TypeAssignment_1)
	{ after(grammarAccess.getActuatorAccess().getTypeAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Actuator__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Actuator__Group__2__Impl
	rule__Actuator__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Actuator__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActuatorAccess().getNameAssignment_2()); }
	(rule__Actuator__NameAssignment_2)
	{ after(grammarAccess.getActuatorAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Actuator__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Actuator__Group__3__Impl
	rule__Actuator__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Actuator__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActuatorAccess().getColonKeyword_3()); }
	':'
	{ after(grammarAccess.getActuatorAccess().getColonKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Actuator__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Actuator__Group__4__Impl
	rule__Actuator__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Actuator__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActuatorAccess().getPinsKeyword_4()); }
	'pins'
	{ after(grammarAccess.getActuatorAccess().getPinsKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Actuator__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Actuator__Group__5__Impl
	rule__Actuator__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Actuator__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActuatorAccess().getPinsAssignment_5()); }
	(rule__Actuator__PinsAssignment_5)*
	{ after(grammarAccess.getActuatorAccess().getPinsAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Actuator__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Actuator__Group__6__Impl
	rule__Actuator__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Actuator__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActuatorAccess().getGroup_6()); }
	(rule__Actuator__Group_6__0)*
	{ after(grammarAccess.getActuatorAccess().getGroup_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Actuator__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Actuator__Group__7__Impl
	rule__Actuator__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Actuator__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActuatorAccess().getSettingsAssignment_7()); }
	(rule__Actuator__SettingsAssignment_7)*
	{ after(grammarAccess.getActuatorAccess().getSettingsAssignment_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Actuator__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Actuator__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Actuator__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActuatorAccess().getTriggerAssignment_8()); }
	(rule__Actuator__TriggerAssignment_8)
	{ after(grammarAccess.getActuatorAccess().getTriggerAssignment_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Actuator__Group_6__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Actuator__Group_6__0__Impl
	rule__Actuator__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Actuator__Group_6__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActuatorAccess().getCommaKeyword_6_0()); }
	','
	{ after(grammarAccess.getActuatorAccess().getCommaKeyword_6_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Actuator__Group_6__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Actuator__Group_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Actuator__Group_6__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActuatorAccess().getPinsAssignment_6_1()); }
	(rule__Actuator__PinsAssignment_6_1)
	{ after(grammarAccess.getActuatorAccess().getPinsAssignment_6_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Trigger__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Trigger__Group_0__0__Impl
	rule__Trigger__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Trigger__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTriggerAccess().getWhenAction_0_0()); }
	()
	{ after(grammarAccess.getTriggerAccess().getWhenAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Trigger__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Trigger__Group_0__1__Impl
	rule__Trigger__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Trigger__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTriggerAccess().getWhenKeyword_0_1()); }
	'when'
	{ after(grammarAccess.getTriggerAccess().getWhenKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Trigger__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Trigger__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Trigger__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTriggerAccess().getExpAssignment_0_2()); }
	(rule__Trigger__ExpAssignment_0_2)
	{ after(grammarAccess.getTriggerAccess().getExpAssignment_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Trigger__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Trigger__Group_1__0__Impl
	rule__Trigger__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Trigger__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTriggerAccess().getOnOffAction_1_0()); }
	()
	{ after(grammarAccess.getTriggerAccess().getOnOffAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Trigger__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Trigger__Group_1__1__Impl
	rule__Trigger__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Trigger__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTriggerAccess().getOnKeyword_1_1()); }
	'on'
	{ after(grammarAccess.getTriggerAccess().getOnKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Trigger__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Trigger__Group_1__2__Impl
	rule__Trigger__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Trigger__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTriggerAccess().getOnExpAssignment_1_2()); }
	(rule__Trigger__OnExpAssignment_1_2)
	{ after(grammarAccess.getTriggerAccess().getOnExpAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Trigger__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Trigger__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Trigger__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTriggerAccess().getAlternatives_1_3()); }
	(rule__Trigger__Alternatives_1_3)
	{ after(grammarAccess.getTriggerAccess().getAlternatives_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Trigger__Group_1_3_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Trigger__Group_1_3_0__0__Impl
	rule__Trigger__Group_1_3_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Trigger__Group_1_3_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTriggerAccess().getOffKeyword_1_3_0_0()); }
	'off'
	{ after(grammarAccess.getTriggerAccess().getOffKeyword_1_3_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Trigger__Group_1_3_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Trigger__Group_1_3_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Trigger__Group_1_3_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTriggerAccess().getOffExpAssignment_1_3_0_1()); }
	(rule__Trigger__OffExpAssignment_1_3_0_1)
	{ after(grammarAccess.getTriggerAccess().getOffExpAssignment_1_3_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Trigger__Group_1_3_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Trigger__Group_1_3_1__0__Impl
	rule__Trigger__Group_1_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Trigger__Group_1_3_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTriggerAccess().getRunKeyword_1_3_1_0()); }
	'run'
	{ after(grammarAccess.getTriggerAccess().getRunKeyword_1_3_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Trigger__Group_1_3_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Trigger__Group_1_3_1__1__Impl
	rule__Trigger__Group_1_3_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Trigger__Group_1_3_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTriggerAccess().getForKeyword_1_3_1_1()); }
	'for'
	{ after(grammarAccess.getTriggerAccess().getForKeyword_1_3_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Trigger__Group_1_3_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Trigger__Group_1_3_1__2__Impl
	rule__Trigger__Group_1_3_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Trigger__Group_1_3_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTriggerAccess().getTimeAssignment_1_3_1_2()); }
	(rule__Trigger__TimeAssignment_1_3_1_2)
	{ after(grammarAccess.getTriggerAccess().getTimeAssignment_1_3_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Trigger__Group_1_3_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Trigger__Group_1_3_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Trigger__Group_1_3_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTriggerAccess().getUnitAssignment_1_3_1_3()); }
	(rule__Trigger__UnitAssignment_1_3_1_3)
	{ after(grammarAccess.getTriggerAccess().getUnitAssignment_1_3_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Setting__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Setting__Group__0__Impl
	rule__Setting__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Setting__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSettingAccess().getSettingKeyword_0()); }
	'setting'
	{ after(grammarAccess.getSettingAccess().getSettingKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Setting__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Setting__Group__1__Impl
	rule__Setting__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Setting__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSettingAccess().getNameAssignment_1()); }
	(rule__Setting__NameAssignment_1)
	{ after(grammarAccess.getSettingAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Setting__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Setting__Group__2__Impl
	rule__Setting__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Setting__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSettingAccess().getEqualsSignKeyword_2()); }
	'='
	{ after(grammarAccess.getSettingAccess().getEqualsSignKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Setting__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Setting__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Setting__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSettingAccess().getValueAssignment_3()); }
	(rule__Setting__ValueAssignment_3)
	{ after(grammarAccess.getSettingAccess().getValueAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Primitive__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primitive__Group_0__0__Impl
	rule__Primitive__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Primitive__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimitiveAccess().getDecimalPrimitiveAction_0_0()); }
	()
	{ after(grammarAccess.getPrimitiveAccess().getDecimalPrimitiveAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primitive__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primitive__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Primitive__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimitiveAccess().getValueAssignment_0_1()); }
	(rule__Primitive__ValueAssignment_0_1)
	{ after(grammarAccess.getPrimitiveAccess().getValueAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Primitive__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primitive__Group_1__0__Impl
	rule__Primitive__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Primitive__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimitiveAccess().getIntPrimitiveAction_1_0()); }
	()
	{ after(grammarAccess.getPrimitiveAccess().getIntPrimitiveAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primitive__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primitive__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Primitive__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimitiveAccess().getValueAssignment_1_1()); }
	(rule__Primitive__ValueAssignment_1_1)
	{ after(grammarAccess.getPrimitiveAccess().getValueAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Primitive__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primitive__Group_2__0__Impl
	rule__Primitive__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Primitive__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimitiveAccess().getBooleanTrueAction_2_0()); }
	()
	{ after(grammarAccess.getPrimitiveAccess().getBooleanTrueAction_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primitive__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primitive__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Primitive__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimitiveAccess().getTRUEKeyword_2_1()); }
	'TRUE'
	{ after(grammarAccess.getPrimitiveAccess().getTRUEKeyword_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Primitive__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primitive__Group_3__0__Impl
	rule__Primitive__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Primitive__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimitiveAccess().getBooleanFalseAction_3_0()); }
	()
	{ after(grammarAccess.getPrimitiveAccess().getBooleanFalseAction_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primitive__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primitive__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Primitive__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimitiveAccess().getFALSEKeyword_3_1()); }
	'FALSE'
	{ after(grammarAccess.getPrimitiveAccess().getFALSEKeyword_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Exp__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Exp__Group__0__Impl
	rule__Exp__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Exp__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpAccess().getFactorParserRuleCall_0()); }
	ruleFactor
	{ after(grammarAccess.getExpAccess().getFactorParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Exp__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Exp__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Exp__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpAccess().getGroup_1()); }
	(rule__Exp__Group_1__0)*
	{ after(grammarAccess.getExpAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Exp__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Exp__Group_1__0__Impl
	rule__Exp__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Exp__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpAccess().getAlternatives_1_0()); }
	(rule__Exp__Alternatives_1_0)
	{ after(grammarAccess.getExpAccess().getAlternatives_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Exp__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Exp__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Exp__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpAccess().getRightAssignment_1_1()); }
	(rule__Exp__RightAssignment_1_1)
	{ after(grammarAccess.getExpAccess().getRightAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Exp__Group_1_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Exp__Group_1_0_0__0__Impl
	rule__Exp__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Exp__Group_1_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpAccess().getPlusLeftAction_1_0_0_0()); }
	()
	{ after(grammarAccess.getExpAccess().getPlusLeftAction_1_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Exp__Group_1_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Exp__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Exp__Group_1_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpAccess().getPlusSignKeyword_1_0_0_1()); }
	'+'
	{ after(grammarAccess.getExpAccess().getPlusSignKeyword_1_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Exp__Group_1_0_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Exp__Group_1_0_1__0__Impl
	rule__Exp__Group_1_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Exp__Group_1_0_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpAccess().getMinusLeftAction_1_0_1_0()); }
	()
	{ after(grammarAccess.getExpAccess().getMinusLeftAction_1_0_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Exp__Group_1_0_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Exp__Group_1_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Exp__Group_1_0_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpAccess().getHyphenMinusKeyword_1_0_1_1()); }
	'-'
	{ after(grammarAccess.getExpAccess().getHyphenMinusKeyword_1_0_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Factor__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Factor__Group__0__Impl
	rule__Factor__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFactorAccess().getCompareParserRuleCall_0()); }
	ruleCompare
	{ after(grammarAccess.getFactorAccess().getCompareParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Factor__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFactorAccess().getGroup_1()); }
	(rule__Factor__Group_1__0)*
	{ after(grammarAccess.getFactorAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Factor__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Factor__Group_1__0__Impl
	rule__Factor__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFactorAccess().getAlternatives_1_0()); }
	(rule__Factor__Alternatives_1_0)
	{ after(grammarAccess.getFactorAccess().getAlternatives_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Factor__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFactorAccess().getRightAssignment_1_1()); }
	(rule__Factor__RightAssignment_1_1)
	{ after(grammarAccess.getFactorAccess().getRightAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Factor__Group_1_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Factor__Group_1_0_0__0__Impl
	rule__Factor__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__Group_1_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFactorAccess().getMultLeftAction_1_0_0_0()); }
	()
	{ after(grammarAccess.getFactorAccess().getMultLeftAction_1_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__Group_1_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Factor__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__Group_1_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFactorAccess().getAsteriskKeyword_1_0_0_1()); }
	'*'
	{ after(grammarAccess.getFactorAccess().getAsteriskKeyword_1_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Factor__Group_1_0_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Factor__Group_1_0_1__0__Impl
	rule__Factor__Group_1_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__Group_1_0_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFactorAccess().getDivLeftAction_1_0_1_0()); }
	()
	{ after(grammarAccess.getFactorAccess().getDivLeftAction_1_0_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__Group_1_0_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Factor__Group_1_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__Group_1_0_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFactorAccess().getSolidusKeyword_1_0_1_1()); }
	'/'
	{ after(grammarAccess.getFactorAccess().getSolidusKeyword_1_0_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Compare__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Compare__Group__0__Impl
	rule__Compare__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Compare__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompareAccess().getCompareOrEqualsParserRuleCall_0()); }
	ruleCompareOrEquals
	{ after(grammarAccess.getCompareAccess().getCompareOrEqualsParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Compare__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Compare__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Compare__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompareAccess().getGroup_1()); }
	(rule__Compare__Group_1__0)*
	{ after(grammarAccess.getCompareAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Compare__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Compare__Group_1__0__Impl
	rule__Compare__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Compare__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompareAccess().getAlternatives_1_0()); }
	(rule__Compare__Alternatives_1_0)
	{ after(grammarAccess.getCompareAccess().getAlternatives_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Compare__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Compare__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Compare__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompareAccess().getRightAssignment_1_1()); }
	(rule__Compare__RightAssignment_1_1)
	{ after(grammarAccess.getCompareAccess().getRightAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Compare__Group_1_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Compare__Group_1_0_0__0__Impl
	rule__Compare__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Compare__Group_1_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompareAccess().getGreaterLeftAction_1_0_0_0()); }
	()
	{ after(grammarAccess.getCompareAccess().getGreaterLeftAction_1_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Compare__Group_1_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Compare__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Compare__Group_1_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompareAccess().getGreaterThanSignKeyword_1_0_0_1()); }
	'>'
	{ after(grammarAccess.getCompareAccess().getGreaterThanSignKeyword_1_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Compare__Group_1_0_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Compare__Group_1_0_1__0__Impl
	rule__Compare__Group_1_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Compare__Group_1_0_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompareAccess().getLesserLeftAction_1_0_1_0()); }
	()
	{ after(grammarAccess.getCompareAccess().getLesserLeftAction_1_0_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Compare__Group_1_0_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Compare__Group_1_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Compare__Group_1_0_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompareAccess().getLessThanSignKeyword_1_0_1_1()); }
	'<'
	{ after(grammarAccess.getCompareAccess().getLessThanSignKeyword_1_0_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CompareOrEquals__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CompareOrEquals__Group__0__Impl
	rule__CompareOrEquals__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CompareOrEquals__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompareOrEqualsAccess().getEqualsOrNotEqualsParserRuleCall_0()); }
	ruleEqualsOrNotEquals
	{ after(grammarAccess.getCompareOrEqualsAccess().getEqualsOrNotEqualsParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompareOrEquals__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CompareOrEquals__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CompareOrEquals__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompareOrEqualsAccess().getGroup_1()); }
	(rule__CompareOrEquals__Group_1__0)*
	{ after(grammarAccess.getCompareOrEqualsAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CompareOrEquals__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CompareOrEquals__Group_1__0__Impl
	rule__CompareOrEquals__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CompareOrEquals__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompareOrEqualsAccess().getAlternatives_1_0()); }
	(rule__CompareOrEquals__Alternatives_1_0)
	{ after(grammarAccess.getCompareOrEqualsAccess().getAlternatives_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompareOrEquals__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CompareOrEquals__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CompareOrEquals__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompareOrEqualsAccess().getRightAssignment_1_1()); }
	(rule__CompareOrEquals__RightAssignment_1_1)
	{ after(grammarAccess.getCompareOrEqualsAccess().getRightAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CompareOrEquals__Group_1_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CompareOrEquals__Group_1_0_0__0__Impl
	rule__CompareOrEquals__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CompareOrEquals__Group_1_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompareOrEqualsAccess().getGreaterOrEqualsLeftAction_1_0_0_0()); }
	()
	{ after(grammarAccess.getCompareOrEqualsAccess().getGreaterOrEqualsLeftAction_1_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompareOrEquals__Group_1_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CompareOrEquals__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CompareOrEquals__Group_1_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompareOrEqualsAccess().getGreaterThanSignEqualsSignKeyword_1_0_0_1()); }
	'>='
	{ after(grammarAccess.getCompareOrEqualsAccess().getGreaterThanSignEqualsSignKeyword_1_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CompareOrEquals__Group_1_0_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CompareOrEquals__Group_1_0_1__0__Impl
	rule__CompareOrEquals__Group_1_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CompareOrEquals__Group_1_0_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompareOrEqualsAccess().getLesserOrEqualsLeftAction_1_0_1_0()); }
	()
	{ after(grammarAccess.getCompareOrEqualsAccess().getLesserOrEqualsLeftAction_1_0_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompareOrEquals__Group_1_0_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CompareOrEquals__Group_1_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CompareOrEquals__Group_1_0_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompareOrEqualsAccess().getLessThanSignEqualsSignKeyword_1_0_1_1()); }
	'<='
	{ after(grammarAccess.getCompareOrEqualsAccess().getLessThanSignEqualsSignKeyword_1_0_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EqualsOrNotEquals__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EqualsOrNotEquals__Group__0__Impl
	rule__EqualsOrNotEquals__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualsOrNotEquals__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualsOrNotEqualsAccess().getAndOrParserRuleCall_0()); }
	ruleAndOr
	{ after(grammarAccess.getEqualsOrNotEqualsAccess().getAndOrParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualsOrNotEquals__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EqualsOrNotEquals__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualsOrNotEquals__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualsOrNotEqualsAccess().getGroup_1()); }
	(rule__EqualsOrNotEquals__Group_1__0)*
	{ after(grammarAccess.getEqualsOrNotEqualsAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EqualsOrNotEquals__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EqualsOrNotEquals__Group_1__0__Impl
	rule__EqualsOrNotEquals__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualsOrNotEquals__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualsOrNotEqualsAccess().getAlternatives_1_0()); }
	(rule__EqualsOrNotEquals__Alternatives_1_0)
	{ after(grammarAccess.getEqualsOrNotEqualsAccess().getAlternatives_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualsOrNotEquals__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EqualsOrNotEquals__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualsOrNotEquals__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualsOrNotEqualsAccess().getRightAssignment_1_1()); }
	(rule__EqualsOrNotEquals__RightAssignment_1_1)
	{ after(grammarAccess.getEqualsOrNotEqualsAccess().getRightAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EqualsOrNotEquals__Group_1_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EqualsOrNotEquals__Group_1_0_0__0__Impl
	rule__EqualsOrNotEquals__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualsOrNotEquals__Group_1_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualsOrNotEqualsAccess().getEqualsLeftAction_1_0_0_0()); }
	()
	{ after(grammarAccess.getEqualsOrNotEqualsAccess().getEqualsLeftAction_1_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualsOrNotEquals__Group_1_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EqualsOrNotEquals__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualsOrNotEquals__Group_1_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualsOrNotEqualsAccess().getEqualsSignEqualsSignKeyword_1_0_0_1()); }
	'=='
	{ after(grammarAccess.getEqualsOrNotEqualsAccess().getEqualsSignEqualsSignKeyword_1_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EqualsOrNotEquals__Group_1_0_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EqualsOrNotEquals__Group_1_0_1__0__Impl
	rule__EqualsOrNotEquals__Group_1_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualsOrNotEquals__Group_1_0_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualsOrNotEqualsAccess().getNotEqualsLeftAction_1_0_1_0()); }
	()
	{ after(grammarAccess.getEqualsOrNotEqualsAccess().getNotEqualsLeftAction_1_0_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualsOrNotEquals__Group_1_0_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EqualsOrNotEquals__Group_1_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualsOrNotEquals__Group_1_0_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualsOrNotEqualsAccess().getExclamationMarkEqualsSignKeyword_1_0_1_1()); }
	'!='
	{ after(grammarAccess.getEqualsOrNotEqualsAccess().getExclamationMarkEqualsSignKeyword_1_0_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AndOr__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AndOr__Group__0__Impl
	rule__AndOr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AndOr__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndOrAccess().getPrimaryParserRuleCall_0()); }
	rulePrimary
	{ after(grammarAccess.getAndOrAccess().getPrimaryParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AndOr__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AndOr__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AndOr__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndOrAccess().getGroup_1()); }
	(rule__AndOr__Group_1__0)*
	{ after(grammarAccess.getAndOrAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AndOr__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AndOr__Group_1__0__Impl
	rule__AndOr__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AndOr__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndOrAccess().getAlternatives_1_0()); }
	(rule__AndOr__Alternatives_1_0)
	{ after(grammarAccess.getAndOrAccess().getAlternatives_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AndOr__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AndOr__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AndOr__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndOrAccess().getRightAssignment_1_1()); }
	(rule__AndOr__RightAssignment_1_1)
	{ after(grammarAccess.getAndOrAccess().getRightAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AndOr__Group_1_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AndOr__Group_1_0_0__0__Impl
	rule__AndOr__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AndOr__Group_1_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndOrAccess().getAndLeftAction_1_0_0_0()); }
	()
	{ after(grammarAccess.getAndOrAccess().getAndLeftAction_1_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AndOr__Group_1_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AndOr__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AndOr__Group_1_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndOrAccess().getAndKeyword_1_0_0_1()); }
	'and'
	{ after(grammarAccess.getAndOrAccess().getAndKeyword_1_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AndOr__Group_1_0_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AndOr__Group_1_0_1__0__Impl
	rule__AndOr__Group_1_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AndOr__Group_1_0_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndOrAccess().getOrLeftAction_1_0_1_0()); }
	()
	{ after(grammarAccess.getAndOrAccess().getOrLeftAction_1_0_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AndOr__Group_1_0_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AndOr__Group_1_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AndOr__Group_1_0_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndOrAccess().getOrKeyword_1_0_1_1()); }
	'or'
	{ after(grammarAccess.getAndOrAccess().getOrKeyword_1_0_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Primary__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_4__0__Impl
	rule__Primary__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getValueAction_4_0()); }
	()
	{ after(grammarAccess.getPrimaryAccess().getValueAction_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getValueKeyword_4_1()); }
	'value'
	{ after(grammarAccess.getPrimaryAccess().getValueKeyword_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExternalCall__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExternalCall__Group__0__Impl
	rule__ExternalCall__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalCall__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExternalCallAccess().getCallKeyword_0()); }
	'call'
	{ after(grammarAccess.getExternalCallAccess().getCallKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalCall__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExternalCall__Group__1__Impl
	rule__ExternalCall__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalCall__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExternalCallAccess().getFuncAssignment_1()); }
	(rule__ExternalCall__FuncAssignment_1)
	{ after(grammarAccess.getExternalCallAccess().getFuncAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalCall__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExternalCall__Group__2__Impl
	rule__ExternalCall__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalCall__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExternalCallAccess().getLeftParenthesisKeyword_2()); }
	'('
	{ after(grammarAccess.getExternalCallAccess().getLeftParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalCall__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExternalCall__Group__3__Impl
	rule__ExternalCall__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalCall__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExternalCallAccess().getArgsAssignment_3()); }
	(rule__ExternalCall__ArgsAssignment_3)?
	{ after(grammarAccess.getExternalCallAccess().getArgsAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalCall__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExternalCall__Group__4__Impl
	rule__ExternalCall__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalCall__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExternalCallAccess().getGroup_4()); }
	(rule__ExternalCall__Group_4__0)*
	{ after(grammarAccess.getExternalCallAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalCall__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExternalCall__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalCall__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExternalCallAccess().getRightParenthesisKeyword_5()); }
	')'
	{ after(grammarAccess.getExternalCallAccess().getRightParenthesisKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExternalCall__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExternalCall__Group_4__0__Impl
	rule__ExternalCall__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalCall__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExternalCallAccess().getCommaKeyword_4_0()); }
	','
	{ after(grammarAccess.getExternalCallAccess().getCommaKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalCall__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExternalCall__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalCall__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExternalCallAccess().getArgsAssignment_4_1()); }
	(rule__ExternalCall__ArgsAssignment_4_1)
	{ after(grammarAccess.getExternalCallAccess().getArgsAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExternalVariableUse__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExternalVariableUse__Group__0__Impl
	rule__ExternalVariableUse__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalVariableUse__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExternalVariableUseAccess().getObjAssignment_0()); }
	(rule__ExternalVariableUse__ObjAssignment_0)
	{ after(grammarAccess.getExternalVariableUseAccess().getObjAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalVariableUse__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExternalVariableUse__Group__1__Impl
	rule__ExternalVariableUse__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalVariableUse__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExternalVariableUseAccess().getAlternatives_1()); }
	(rule__ExternalVariableUse__Alternatives_1)
	{ after(grammarAccess.getExternalVariableUseAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalVariableUse__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExternalVariableUse__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalVariableUse__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExternalVariableUseAccess().getRefAssignment_2()); }
	(rule__ExternalVariableUse__RefAssignment_2)
	{ after(grammarAccess.getExternalVariableUseAccess().getRefAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__GraphVariableUse__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GraphVariableUse__Group__0__Impl
	rule__GraphVariableUse__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphVariableUse__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGraphVariableUseAccess().getWorkerAssignment_0()); }
	(rule__GraphVariableUse__WorkerAssignment_0)
	{ after(grammarAccess.getGraphVariableUseAccess().getWorkerAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphVariableUse__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GraphVariableUse__Group__1__Impl
	rule__GraphVariableUse__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphVariableUse__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGraphVariableUseAccess().getAlternatives_1()); }
	(rule__GraphVariableUse__Alternatives_1)
	{ after(grammarAccess.getGraphVariableUseAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphVariableUse__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GraphVariableUse__Group__2__Impl
	rule__GraphVariableUse__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphVariableUse__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGraphVariableUseAccess().getDeviceAssignment_2()); }
	(rule__GraphVariableUse__DeviceAssignment_2)
	{ after(grammarAccess.getGraphVariableUseAccess().getDeviceAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphVariableUse__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GraphVariableUse__Group__3__Impl
	rule__GraphVariableUse__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphVariableUse__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGraphVariableUseAccess().getAlternatives_3()); }
	(rule__GraphVariableUse__Alternatives_3)
	{ after(grammarAccess.getGraphVariableUseAccess().getAlternatives_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphVariableUse__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GraphVariableUse__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphVariableUse__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGraphVariableUseAccess().getRefAssignment_4()); }
	(rule__GraphVariableUse__RefAssignment_4)
	{ after(grammarAccess.getGraphVariableUseAccess().getRefAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Parenthesis__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parenthesis__Group__0__Impl
	rule__Parenthesis__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Parenthesis__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParenthesisAccess().getLeftParenthesisKeyword_0()); }
	'('
	{ after(grammarAccess.getParenthesisAccess().getLeftParenthesisKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parenthesis__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parenthesis__Group__1__Impl
	rule__Parenthesis__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Parenthesis__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParenthesisAccess().getExpAssignment_1()); }
	(rule__Parenthesis__ExpAssignment_1)
	{ after(grammarAccess.getParenthesisAccess().getExpAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parenthesis__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parenthesis__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Parenthesis__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParenthesisAccess().getRightParenthesisKeyword_2()); }
	')'
	{ after(grammarAccess.getParenthesisAccess().getRightParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__System__WifiSsidAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSystemAccess().getWifiSsidSTRINGTerminalRuleCall_3_0()); }
		RULE_STRING
		{ after(grammarAccess.getSystemAccess().getWifiSsidSTRINGTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__System__WifiPasswordAssignment_4_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSystemAccess().getWifiPasswordSTRINGTerminalRuleCall_4_2_0()); }
		RULE_STRING
		{ after(grammarAccess.getSystemAccess().getWifiPasswordSTRINGTerminalRuleCall_4_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__System__MqttHostAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSystemAccess().getMqttHostSTRINGTerminalRuleCall_6_0()); }
		RULE_STRING
		{ after(grammarAccess.getSystemAccess().getMqttHostSTRINGTerminalRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__System__MqttUsernameAssignment_7_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSystemAccess().getMqttUsernameSTRINGTerminalRuleCall_7_2_0()); }
		RULE_STRING
		{ after(grammarAccess.getSystemAccess().getMqttUsernameSTRINGTerminalRuleCall_7_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__System__MqttPasswordAssignment_7_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSystemAccess().getMqttPasswordSTRINGTerminalRuleCall_7_5_0()); }
		RULE_STRING
		{ after(grammarAccess.getSystemAccess().getMqttPasswordSTRINGTerminalRuleCall_7_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__System__GatewayAssignment_8
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSystemAccess().getGatewayGatewayParserRuleCall_8_0()); }
		ruleGateway
		{ after(grammarAccess.getSystemAccess().getGatewayGatewayParserRuleCall_8_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__System__GraphsAssignment_9
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSystemAccess().getGraphsGraphParserRuleCall_9_0()); }
		ruleGraph
		{ after(grammarAccess.getSystemAccess().getGraphsGraphParserRuleCall_9_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Graph__CategoryAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGraphAccess().getCategorySTRINGTerminalRuleCall_3_0()); }
		RULE_STRING
		{ after(grammarAccess.getGraphAccess().getCategorySTRINGTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Graph__TitleAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGraphAccess().getTitleSTRINGTerminalRuleCall_5_0()); }
		RULE_STRING
		{ after(grammarAccess.getGraphAccess().getTitleSTRINGTerminalRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Graph__XlabelAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGraphAccess().getXlabelSTRINGTerminalRuleCall_7_0()); }
		RULE_STRING
		{ after(grammarAccess.getGraphAccess().getXlabelSTRINGTerminalRuleCall_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Graph__YlabelAssignment_9
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGraphAccess().getYlabelSTRINGTerminalRuleCall_9_0()); }
		RULE_STRING
		{ after(grammarAccess.getGraphAccess().getYlabelSTRINGTerminalRuleCall_9_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Graph__LinesAssignment_10
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGraphAccess().getLinesGraphLineParserRuleCall_10_0()); }
		ruleGraphLine
		{ after(grammarAccess.getGraphAccess().getLinesGraphLineParserRuleCall_10_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphLine__OutputAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGraphLineAccess().getOutputExpParserRuleCall_1_0()); }
		ruleExp
		{ after(grammarAccess.getGraphLineAccess().getOutputExpParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphLine__LegendAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGraphLineAccess().getLegendSTRINGTerminalRuleCall_2_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getGraphLineAccess().getLegendSTRINGTerminalRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphLine__ColorAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGraphLineAccess().getColorColorParserRuleCall_3_1_0()); }
		ruleColor
		{ after(grammarAccess.getGraphLineAccess().getColorColorParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Color__RedAssignment_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getColorAccess().getRedDECIMALTerminalRuleCall_0_2_0()); }
		RULE_DECIMAL
		{ after(grammarAccess.getColorAccess().getRedDECIMALTerminalRuleCall_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Color__GreenAssignment_0_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getColorAccess().getGreenDECIMALTerminalRuleCall_0_4_0()); }
		RULE_DECIMAL
		{ after(grammarAccess.getColorAccess().getGreenDECIMALTerminalRuleCall_0_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Color__BlueAssignment_0_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getColorAccess().getBlueDECIMALTerminalRuleCall_0_6_0()); }
		RULE_DECIMAL
		{ after(grammarAccess.getColorAccess().getBlueDECIMALTerminalRuleCall_0_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Color__PresetAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getColorAccess().getPresetColorPresetEnumRuleCall_1_1_0()); }
		ruleColorPreset
		{ after(grammarAccess.getColorAccess().getPresetColorPresetEnumRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Gateway__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGatewayAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getGatewayAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Gateway__MacAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGatewayAccess().getMacMACTerminalRuleCall_4_0()); }
		RULE_MAC
		{ after(grammarAccess.getGatewayAccess().getMacMACTerminalRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Gateway__WorkersAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGatewayAccess().getWorkersWorkerParserRuleCall_5_0()); }
		ruleWorker
		{ after(grammarAccess.getGatewayAccess().getWorkersWorkerParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Worker__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWorkerAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getWorkerAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Worker__MacAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWorkerAccess().getMacMACTerminalRuleCall_3_1_0()); }
		RULE_MAC
		{ after(grammarAccess.getWorkerAccess().getMacMACTerminalRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Worker__SleepTimeAssignment_4_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWorkerAccess().getSleepTimeINTTerminalRuleCall_4_2_0()); }
		RULE_INT
		{ after(grammarAccess.getWorkerAccess().getSleepTimeINTTerminalRuleCall_4_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Worker__TimeUnitAssignment_4_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWorkerAccess().getTimeUnitTimeUnitParserRuleCall_4_3_0()); }
		ruleTimeUnit
		{ after(grammarAccess.getWorkerAccess().getTimeUnitTimeUnitParserRuleCall_4_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Worker__DevicesAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWorkerAccess().getDevicesDeviceParserRuleCall_5_0()); }
		ruleDevice
		{ after(grammarAccess.getWorkerAccess().getDevicesDeviceParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sensor__TypeAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSensorAccess().getTypeIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getSensorAccess().getTypeIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sensor__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSensorAccess().getNameIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getSensorAccess().getNameIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sensor__PinsAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSensorAccess().getPinsPinParserRuleCall_4_1_0()); }
		rulePin
		{ after(grammarAccess.getSensorAccess().getPinsPinParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sensor__PinsAssignment_4_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSensorAccess().getPinsPinParserRuleCall_4_2_1_0()); }
		rulePin
		{ after(grammarAccess.getSensorAccess().getPinsPinParserRuleCall_4_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sensor__OutputsAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSensorAccess().getOutputsSensorOutputParserRuleCall_5_0()); }
		ruleSensorOutput
		{ after(grammarAccess.getSensorAccess().getOutputsSensorOutputParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sensor__SettingsAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSensorAccess().getSettingsSettingParserRuleCall_6_0()); }
		ruleSetting
		{ after(grammarAccess.getSensorAccess().getSettingsSettingParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sensor__PredicateAssignment_7_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSensorAccess().getPredicateExpParserRuleCall_7_2_0()); }
		ruleExp
		{ after(grammarAccess.getSensorAccess().getPredicateExpParserRuleCall_7_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Pin__TypeAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPinAccess().getTypePinTypeParserRuleCall_0_0()); }
		rulePinType
		{ after(grammarAccess.getPinAccess().getTypePinTypeParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Pin__NumberAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPinAccess().getNumberINTTerminalRuleCall_1_0()); }
		RULE_INT
		{ after(grammarAccess.getPinAccess().getNumberINTTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SensorOutput__OutputAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSensorOutputAccess().getOutputSTRINGTerminalRuleCall_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getSensorOutputAccess().getOutputSTRINGTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SensorOutput__NameAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSensorOutputAccess().getNameIDTerminalRuleCall_3_0()); }
		RULE_ID
		{ after(grammarAccess.getSensorOutputAccess().getNameIDTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SensorOutput__MappingAssignment_4_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSensorOutputAccess().getMappingExpParserRuleCall_4_2_0()); }
		ruleExp
		{ after(grammarAccess.getSensorOutputAccess().getMappingExpParserRuleCall_4_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Actuator__TypeAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActuatorAccess().getTypeIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getActuatorAccess().getTypeIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Actuator__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActuatorAccess().getNameIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getActuatorAccess().getNameIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Actuator__PinsAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActuatorAccess().getPinsPinParserRuleCall_5_0()); }
		rulePin
		{ after(grammarAccess.getActuatorAccess().getPinsPinParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Actuator__PinsAssignment_6_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActuatorAccess().getPinsPinParserRuleCall_6_1_0()); }
		rulePin
		{ after(grammarAccess.getActuatorAccess().getPinsPinParserRuleCall_6_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Actuator__SettingsAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActuatorAccess().getSettingsSettingParserRuleCall_7_0()); }
		ruleSetting
		{ after(grammarAccess.getActuatorAccess().getSettingsSettingParserRuleCall_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Actuator__TriggerAssignment_8
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActuatorAccess().getTriggerTriggerParserRuleCall_8_0()); }
		ruleTrigger
		{ after(grammarAccess.getActuatorAccess().getTriggerTriggerParserRuleCall_8_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Trigger__ExpAssignment_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTriggerAccess().getExpExpParserRuleCall_0_2_0()); }
		ruleExp
		{ after(grammarAccess.getTriggerAccess().getExpExpParserRuleCall_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Trigger__OnExpAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTriggerAccess().getOnExpExpParserRuleCall_1_2_0()); }
		ruleExp
		{ after(grammarAccess.getTriggerAccess().getOnExpExpParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Trigger__OffExpAssignment_1_3_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTriggerAccess().getOffExpExpParserRuleCall_1_3_0_1_0()); }
		ruleExp
		{ after(grammarAccess.getTriggerAccess().getOffExpExpParserRuleCall_1_3_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Trigger__TimeAssignment_1_3_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTriggerAccess().getTimeINTTerminalRuleCall_1_3_1_2_0()); }
		RULE_INT
		{ after(grammarAccess.getTriggerAccess().getTimeINTTerminalRuleCall_1_3_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Trigger__UnitAssignment_1_3_1_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTriggerAccess().getUnitTimeUnitParserRuleCall_1_3_1_3_0()); }
		ruleTimeUnit
		{ after(grammarAccess.getTriggerAccess().getUnitTimeUnitParserRuleCall_1_3_1_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Setting__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSettingAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getSettingAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Setting__ValueAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSettingAccess().getValuePrimitiveParserRuleCall_3_0()); }
		rulePrimitive
		{ after(grammarAccess.getSettingAccess().getValuePrimitiveParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primitive__ValueAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimitiveAccess().getValueDECIMALTerminalRuleCall_0_1_0()); }
		RULE_DECIMAL
		{ after(grammarAccess.getPrimitiveAccess().getValueDECIMALTerminalRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primitive__ValueAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimitiveAccess().getValueINTTerminalRuleCall_1_1_0()); }
		RULE_INT
		{ after(grammarAccess.getPrimitiveAccess().getValueINTTerminalRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Exp__RightAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpAccess().getRightFactorParserRuleCall_1_1_0()); }
		ruleFactor
		{ after(grammarAccess.getExpAccess().getRightFactorParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__RightAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFactorAccess().getRightCompareParserRuleCall_1_1_0()); }
		ruleCompare
		{ after(grammarAccess.getFactorAccess().getRightCompareParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Compare__RightAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCompareAccess().getRightCompareOrEqualsParserRuleCall_1_1_0()); }
		ruleCompareOrEquals
		{ after(grammarAccess.getCompareAccess().getRightCompareOrEqualsParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompareOrEquals__RightAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCompareOrEqualsAccess().getRightEqualsOrNotEqualsParserRuleCall_1_1_0()); }
		ruleEqualsOrNotEquals
		{ after(grammarAccess.getCompareOrEqualsAccess().getRightEqualsOrNotEqualsParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualsOrNotEquals__RightAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEqualsOrNotEqualsAccess().getRightAndOrParserRuleCall_1_1_0()); }
		ruleAndOr
		{ after(grammarAccess.getEqualsOrNotEqualsAccess().getRightAndOrParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AndOr__RightAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAndOrAccess().getRightPrimaryParserRuleCall_1_1_0()); }
		rulePrimary
		{ after(grammarAccess.getAndOrAccess().getRightPrimaryParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalCall__FuncAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExternalCallAccess().getFuncIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getExternalCallAccess().getFuncIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalCall__ArgsAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExternalCallAccess().getArgsExpParserRuleCall_3_0()); }
		ruleExp
		{ after(grammarAccess.getExternalCallAccess().getArgsExpParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalCall__ArgsAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExternalCallAccess().getArgsExpParserRuleCall_4_1_0()); }
		ruleExp
		{ after(grammarAccess.getExternalCallAccess().getArgsExpParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InternalVariableUse__RefAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInternalVariableUseAccess().getRefBindingCrossReference_0()); }
		(
			{ before(grammarAccess.getInternalVariableUseAccess().getRefBindingIDTerminalRuleCall_0_1()); }
			RULE_ID
			{ after(grammarAccess.getInternalVariableUseAccess().getRefBindingIDTerminalRuleCall_0_1()); }
		)
		{ after(grammarAccess.getInternalVariableUseAccess().getRefBindingCrossReference_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalVariableUse__ObjAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExternalVariableUseAccess().getObjDeviceCrossReference_0_0()); }
		(
			{ before(grammarAccess.getExternalVariableUseAccess().getObjDeviceIDTerminalRuleCall_0_0_1()); }
			RULE_ID
			{ after(grammarAccess.getExternalVariableUseAccess().getObjDeviceIDTerminalRuleCall_0_0_1()); }
		)
		{ after(grammarAccess.getExternalVariableUseAccess().getObjDeviceCrossReference_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalVariableUse__RefAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExternalVariableUseAccess().getRefBindingCrossReference_2_0()); }
		(
			{ before(grammarAccess.getExternalVariableUseAccess().getRefBindingIDTerminalRuleCall_2_0_1()); }
			RULE_ID
			{ after(grammarAccess.getExternalVariableUseAccess().getRefBindingIDTerminalRuleCall_2_0_1()); }
		)
		{ after(grammarAccess.getExternalVariableUseAccess().getRefBindingCrossReference_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphVariableUse__WorkerAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGraphVariableUseAccess().getWorkerWorkerCrossReference_0_0()); }
		(
			{ before(grammarAccess.getGraphVariableUseAccess().getWorkerWorkerIDTerminalRuleCall_0_0_1()); }
			RULE_ID
			{ after(grammarAccess.getGraphVariableUseAccess().getWorkerWorkerIDTerminalRuleCall_0_0_1()); }
		)
		{ after(grammarAccess.getGraphVariableUseAccess().getWorkerWorkerCrossReference_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphVariableUse__DeviceAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGraphVariableUseAccess().getDeviceDeviceCrossReference_2_0()); }
		(
			{ before(grammarAccess.getGraphVariableUseAccess().getDeviceDeviceIDTerminalRuleCall_2_0_1()); }
			RULE_ID
			{ after(grammarAccess.getGraphVariableUseAccess().getDeviceDeviceIDTerminalRuleCall_2_0_1()); }
		)
		{ after(grammarAccess.getGraphVariableUseAccess().getDeviceDeviceCrossReference_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphVariableUse__RefAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGraphVariableUseAccess().getRefBindingCrossReference_4_0()); }
		(
			{ before(grammarAccess.getGraphVariableUseAccess().getRefBindingIDTerminalRuleCall_4_0_1()); }
			RULE_ID
			{ after(grammarAccess.getGraphVariableUseAccess().getRefBindingIDTerminalRuleCall_4_0_1()); }
		)
		{ after(grammarAccess.getGraphVariableUseAccess().getRefBindingCrossReference_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parenthesis__ExpAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParenthesisAccess().getExpExpParserRuleCall_1_0()); }
		ruleExp
		{ after(grammarAccess.getParenthesisAccess().getExpExpParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_MAC : RULE_HEXBYTE ':' RULE_HEXBYTE ':' RULE_HEXBYTE ':' RULE_HEXBYTE ':' RULE_HEXBYTE ':' RULE_HEXBYTE;

fragment RULE_HEXBYTE : ('0'..'9'|'A'..'F') ('0'..'9'|'A'..'F');

RULE_DECIMAL : '-'? RULE_INT ('.' RULE_INT)+;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
